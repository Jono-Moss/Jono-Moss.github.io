[{"content":"Introduction Here is a quick write up of how to create your own dashboard widget on OpnSense.\nAt the time of writing this, I am using OpnSense version 24.7. The original documents can be found at:\nhttps://docs.opnsense.org/development/frontend/dashboard.html We will be taking the existing widgets and merge them into one big widget with our own styling and layout. The purpose on this guide is not to be a javascript and html development tutorial, but instead show the basics of how to start developing a widget.\nThe Development Environment At the time of writing this, I was doing a few network designs and projects using GNS3. So I decided to make a \u0026ldquo;Lab\u0026rdquo; on there and turn that into a small development environment.\nThe lab consisted of 4 \u0026ldquo;Appliances\u0026rdquo;:\nCloud - to give us access to the internet OpnSense VM An Ubuntu VM (We will use this as our development machine) A basic switch (This is not really needed) Make sure to set / change the \u0026ldquo;Console\u0026rdquo; setting for both the OpnSense and Ubuntu VM to be \u0026ldquo;Spice Agent\u0026rdquo;.\nOnce the lab is setup, we will move to setting up the \u0026ldquo;Appliances\u0026rdquo;\nOpnSense VM The first thing you will need to do is assign the interfaces so that OpnSense knows\nwhich is your WAN interface and which is your LAN interface.\nThis can be done by \u0026ldquo;Double Clicking\u0026rdquo; on the OpnSense Appliance, login using the default login details:\nuser: root\npass: opnsense\nThen using the \u0026ldquo;Assign Interfaces\u0026rdquo; option in the menu.\nOnce that id done, we need to enable SSH access for the root user so that we can access the files on OpnSense.\nI did this via the \u0026ldquo;Web UI\u0026rdquo;, using the Ubuntu VM. Since the default LAN IP is set to be:\n192.168.1.1/24\nI \u0026ldquo;Double Clicked\u0026rdquo; on the Ubuntu VM to open it and used Firefox to access the \u0026ldquo;web UI\u0026rdquo; on 192.168.1.1.\nFrom there head over to:\nSystem-\u0026gt;Settings-\u0026gt;Administration\nThen enable the Secure Shell Server, Permit Root User Login and Permit Password Login.\nSave and Apply the changes.\nWe now are able to use sFTP to access the files on OpnSense.\nUbuntu VM You may use whatever program you would like to use to develop the widget,\nsince it is only HTML and Javascript, there is no need for any \u0026ldquo;heavy IDE\u0026rdquo;. I started just using Ubuntu\u0026rsquo;s default text editor but moved to installing VSCode as I wanted things like code folding that I was not getting from the default editor.\nWidget File Structure There are 4 main locations that you will use to store your files for dashboard widgets to work:\nWidgets are stored in:\n/usr/local/opnsense/www/js/widgets/ Were your widgets core file will be stored:\n/usr/local/opnsense/www/js/widgets/Metadata/ CSS file for styling, however I suggest sticking to inline CSS:\n/usr/local/opnsense/www/css/dashboard.css Images can be stored in the \u0026ldquo;themes\u0026rdquo; directory:\n/ui/themes/\nFiles That make The Widget There are 2 main files that make a widget:\nThe \u0026ldquo;core\u0026rdquo; .xml file, which is used to register the widget in OpnSense and store \u0026ldquo;Localisation\u0026rdquo; info. The \u0026ldquo;widget\u0026rdquo; .js file, which is where all the widget logic and UI is created. The \u0026ldquo;core\u0026rdquo; file is stored in the /usr/local/opnsense/www/js/widgets/Metadata/ folder.\nYou can name it anything you like, in this guide we will call it jonoCustomwidget.xml\nThe \u0026ldquo;widget\u0026rdquo; file is created an stored in the /usr/local/opnsense/www/js/widgets/ folder. You can name it anything you like, in this guide we will call it JonoCustom.js\nWith that in mind, I will go over how to access the folders and files in order to start developing your widget.\nAccessing the folders and Files Ubuntu\u0026rsquo;s \u0026ldquo;file explorer\u0026rdquo; has the ability to access files directly using sFTP, so we can easily access the files on OpnSense using that feature.\nOpen the \u0026ldquo;file explorer\u0026rdquo; and click on the Other Locations option at the bottom left. Then in the input at the bottom, you can use the following to access the files:\nssh://opnsenseip\nor\nsftp://opnsense-ip So in this guide it will be: ssh://192.168.1.1\nor\nsftp://192.168.1.1\nYou will be prompted to enter in your OpnSense credentials to get access. You will then be taken to the users home folder, in my case, since I logged into OpnSense using the root user, I will be taken to the root users home folder which is currently empty.\nFrom there, you can click on the \u0026ldquo;IP Address\u0026rdquo; at the top navigation pane and remove the \u0026ldquo;Trailing path\u0026rdquo;, in this to go back out of the \u0026ldquo;root home\u0026rdquo; folder and out to the top most path / folder of OpnSense.\nSo in my case I will change it from sftp://192.168.1.1/root back to sftp://192.168.1.1 and then press the Enter key on my keyboard to go to the main path. We can now \u0026ldquo;visually\u0026rdquo; navigate the OpnSense file system easily. From here we will navigate to the main widget folder which is located at:\n/usr/local/opnsense/www/js/widgets/\nCreate the Files The \u0026ldquo;Widget\u0026rdquo; File We will start with creating the \u0026ldquo;widget\u0026rdquo; js file. To do this, open the IDE that you will use to develop the widget.\nIn the IDE, create a new \u0026ldquo;js\u0026rdquo; file, navigate to the /usr/local/opnsense/www/js/widgets/ folder and save it.\nSince we have it open in the Ubuntu file explorer, we can access the folder via the UI by selecting it on the left menu panel.\nYou can name it whatever you like, in this guide I will name it: JonoCustom.js\nThe \u0026ldquo;Core\u0026rdquo; File Using the same stpes as above. Create an XML file in the following folder, name it whatever you like:\n/usr/local/opnsense/www/js/widgets/Metadata/ In this guide I named it jonoCustomwidget.xml\nLet the Development Begin The \u0026ldquo;Core\u0026rdquo; File You can copy and paste the code below into your XML file, I will explain each section to you:\n\u0026lt;metadata\u0026gt; \u0026lt;jonoCustomwidget\u0026gt; \u0026lt;filename\u0026gt;JonoCustom.js\u0026lt;/filename\u0026gt; \u0026lt;link\u0026gt;https://jonomoss.com\u0026lt;/link\u0026gt; \u0026lt;endpoints\u0026gt; \u0026lt;endpoint\u0026gt;/api/diagnostics/system/systemResources\u0026lt;/endpoint\u0026gt; \u0026lt;/endpoints\u0026gt; \u0026lt;translations\u0026gt; \u0026lt;title\u0026gt;Jono Custom Widget\u0026lt;/title\u0026gt; \u0026lt;used\u0026gt;Used\u0026lt;/used\u0026gt; \u0026lt;free\u0026gt;Free\u0026lt;/free\u0026gt; \u0026lt;firewall\u0026gt;Firewall Logs\u0026lt;/firewall\u0026gt; \u0026lt;action\u0026gt;Action\u0026lt;/action\u0026gt; \u0026lt;time\u0026gt;Time\u0026lt;/time\u0026gt; \u0026lt;interface\u0026gt;Interface\u0026lt;/interface\u0026gt; \u0026lt;source\u0026gt;Source\u0026lt;/source\u0026gt; \u0026lt;destination\u0026gt;Destination\u0026lt;/destination\u0026gt; \u0026lt;port\u0026gt;Port\u0026lt;/port\u0026gt; \u0026lt;matchedrule\u0026gt;Matched rule\u0026lt;/matchedrule\u0026gt; \u0026lt;interfaces\u0026gt;Interfaces\u0026lt;/interfaces\u0026gt; \u0026lt;services\u0026gt;Services\u0026lt;/services\u0026gt; \u0026lt;noservices\u0026gt;No services found\u0026lt;/noservices\u0026gt; \u0026lt;running\u0026gt;Running\u0026lt;/running\u0026gt; \u0026lt;stopped\u0026gt;Stopped\u0026lt;/stopped\u0026gt; \u0026lt;restart\u0026gt;Restart\u0026lt;/restart\u0026gt; \u0026lt;stop\u0026gt;Stop\u0026lt;/stop\u0026gt; \u0026lt;start\u0026gt;Start\u0026lt;/start\u0026gt; \u0026lt;gateway\u0026gt;Gateways\u0026lt;/gateway\u0026gt; \u0026lt;rtt\u0026gt;RTT\u0026lt;/rtt\u0026gt; \u0026lt;rttd\u0026gt;RTTd\u0026lt;/rttd\u0026gt; \u0026lt;loss\u0026gt;Loss\u0026lt;/loss\u0026gt; \u0026lt;/translations\u0026gt; \u0026lt;/jonoCustomwidget\u0026gt; \u0026lt;/metadata\u0026gt; The first parent \u0026ldquo;tag\u0026rdquo; in the XML file needs to be \u0026lt;metadata\u0026gt;\u0026lt;/metadata\u0026gt; this tells OpnSense what the content inside it will be linked to / be about.\nYou need to always have this in the core file. The next tag in the \u0026lt;metadata\u0026gt;\u0026lt;/metadata\u0026gt; will be what you want to call your widget. In this case we will call it \u0026lt;jonoCustomwidget\u0026gt;\u0026lt;/jonoCustomwidget\u0026gt; This is what yo will see in the \u0026ldquo;Widget List\u0026rdquo; when adding it to the dashboard. The next tag in the \u0026lt;jonoCustomwidget\u0026gt;\u0026lt;/jonoCustomwidget\u0026gt; section is the \u0026lt;filename\u0026gt;JonoCustom.js\u0026lt;/filename\u0026gt;.\nThis tells OpnSense what the name of the \u0026ldquo;Widget\u0026rdquo; js file is.\nIn the previous file creation section. We create and named the \u0026ldquo;widget\u0026rdquo; file JonoCustom.js. So it is very important that it matches the name of the file you created. The \u0026lt;link\u0026gt;https://jonomoss.com\u0026lt;/link\u0026gt; tag is not really used, but it is be a nice place to put a link to where a developer or user can get more info about the widget. The \u0026lt;endpoints\u0026gt;\u0026lt;/endpoints\u0026gt; section is where you will tell OpnSense what \u0026ldquo;endpoints\u0026rdquo; the widget will be using. From there OpnSense will see if the current logged in user has access to those endpoints (ACL). Important\nIn this guide and example I forgot to add all the end points. However since I login to the OpnSense web UI via the \u0026ldquo;root\u0026rdquo; user, the widget will still work. If however a user who does not have access to the endpoints uses this widget, they will run into errors.\nThe \u0026lt;translations\u0026gt;\u0026lt;/translations\u0026gt; section is used for static text in your widget, you can give the tag any name and that will be used to reference the value / text in it. \u0026lt;keyName\u0026gt;\u0026lt;/keyName\u0026gt;. As an example, you can create a \u0026ldquo;translation\u0026rdquo; with the key as \u0026lt;title\u0026gt;My Widget\u0026lt;/title\u0026gt; and in the \u0026ldquo;widget\u0026rdquo; file, you can reference and use the \u0026ldquo;My Widget\u0026rdquo; text by using the following code: ${this.translations.title} The \u0026ldquo;Widget\u0026rdquo; File When creating your widget, your class has to extend one of the three base classes:\nBaseWidget\nBaseTableWidget\nBaseGaugeWidget The BaseTableWidget and BaseGaugeWidget both extend the BaseWidget but have some built in functions to be able to speed up the creation of either a \u0026ldquo;table\u0026rdquo; based widget or a \u0026ldquo;gauge\u0026rdquo; based widget. when I started this guide, I was focusing on creating a \u0026ldquo;Firewall Log\u0026rdquo; widget. So I started by extending the BaseTableWidget. However, as I got more knowledgeable and comfortable with how the widgets worked. I stopped using OpnSense\u0026rsquo;s table functions and instead wrote my own. I did not change the extends to be BaseWidget, How ever it does not really make a difference to my widget.\nSo in this guide the class we will create will be as follows:\nexport default class Jono extends BaseTableWidget {} There are 5 main functions that OpnSense triggers when you use your widget,\nThe following are the main functions: constructor - Run once when widget is created getMarkup - Run once when widget is started onMarkupRendered - called once after \u0026ldquo;getMarkup\u0026rdquo; is completed onWidgetTick - Run every tick, you can set the \u0026ldquo;tick rate\u0026rdquo; in the constructor, this is where you get and refresh the widgets data onWidgetClose - Run once when widget is closed Constructor The only things we will do in the constructor is set the \u0026ldquo;tick rate\u0026rdquo; and add a \u0026ldquo;locked\u0026rdquo; variable that the \u0026ldquo;service\u0026rdquo; system needed to keep track of its state.\nThese variables are declared in the parent class, we are just setting the values in our child class.\ngetMarkup() The getMarkup() function is then called after the constructor, this is used to create the main HTML structure of the widget.\nSince I want to have multiple widgets in one, my getMarkup() function was looking messy and become difficult to follow.\nSo what I decided to do was to create a separate function for each widget section I wanted and then called them here.\nI have made comments in the file so it should be easy to follow. Doing it this way also allows for me to easily extract the different widgets code out of this file and use them else where if I want to create a new widget in the future.\nThe next thing that I did was to add a function that will include all the CSS into my widget. When I was using the CSS file that the OpnSense documents recommended\n/usr/local/opnsense/www/css/dashboard.css\nI noticed that after OpnSense did an update. All my CSS was removed from that file.\nSo instead I decided to move all the CSS into the widget itself and add it to the html in this getMarkup() function.\nNow updates will not interfere with the widget.\n#### onMarkupRendered() This is called after the getMarkup() function.\nThe purpose of this function is to add more data to the main widget HTML structure but could only be done once the initial structure is on the DOM.\nonWidgetTick() This is where the magic happens, all the data your widget need to get and then render to the screen is done here.\nJust like the above functions, I have created a separate function for each section so that it is more organised and easier for me to follow.\nThe general process of the data fetching and updating goes as follows:\nIf needed, clear the existing data from the DOM (remove from section) Call and get the data from the api endpoint. Once the data is received, map the data to an HTML object / snippets. Append or replace the data to the main HTML structure. When the next tick is met, repeat. onWidgetClose() The last function onWidgetClose() calls the onWidgetClose() function in r=the parent class. This does garbage collection and destructor things.\nExplain the dangers of downloading widgets Be careful when downloading widgets, is basically any html and javascript can be run. So for example a abd actor can have hidden fields on the code, for example \u0026ldquo;Address\u0026rdquo; and \u0026ldquo;Credit Card\u0026rdquo; details that your browser could auto fill with saved data you have. I simple script can then auto send those details to the bad actor.\n","date":"2024-12-06T00:00:00Z","image":"http://localhost:1313/splash.jpg","permalink":"http://localhost:1313/post/opnsense-dashboard-widget-06-12-2024/","title":"OpnSense - How To Create A Custom Dashboard Widget"},{"content":" Introduction We will follow most of the steps in the official Installation guide on GNS3\u0026rsquo;s website, however during the installation and initial set up of GNS3.\nI ran into issues and errors, I will show you all the steps I went through to get GNS3 installed and running.\nInstallation The official installation guide for Linux can be found using the link below: https://docs.gns3.com/docs/getting-started/installation/linux/\nRefresh apt: sudo apt update Install python and the required emulation \u0026amp; gui packages.\nWhen following the original guide, \u0026ldquo;dynamips\u0026rdquo; is not found.\nSo in order to continue with the installation, we will remove it from this step and install it manually in the next step. sudo apt install python3 python3-pip pipx python3-pyqt5 python3-pyqt5.qtwebsockets python3-pyqt5.qtsvg qemu-kvm qemu-utils libvirt-clients libvirt-daemon-system virtinst software-properties-common ca-certificates curl gnupg2 We will now install \u0026ldquo;dynamips\u0026rdquo;. First we need to download the dynamips package, then install it. wget http://ftp.us.debian.org/debian/pool/non-free/d/dynamips/dynamips_0.2.14-1_amd64.deb and then\nsudo dpkg -i dynamips_0.2.14-1_amd64.deb Use pipx to install gns3: pipx install gns3-server pipx install gns3-gui We then add the \u0026ldquo;bin\u0026rdquo; directory to the \u0026ldquo;path\u0026rdquo; for the terminal to be able to find and run GNS3\npipx ensurepath To launch the GUI, we will need to prepare the virtual environment. Inject the GNS server and QT elements: pipx inject gns3-gui gns3-server PyQt5 Close and then reopen your terminal. You can then type \u0026ldquo;gns3\u0026rdquo; in the terminal to start it. gns3 Fixing Issues and Errors The first issue I ran into is that I would get a \u0026ldquo;libvirt Not Installed / virbr0 Missing\u0026rdquo; error when trying to add a \u0026ldquo;cloud\u0026rdquo; or \u0026ldquo;NAT\u0026rdquo; node.\nTo fix this issue run the following command: sudo virsh net-start default The next issue I ran into was GNS3 throwing out a \u0026ldquo;No VPCS Path\u0026rdquo; error.\nWe will need to do the following steps to fix it.\n2.1 Install the library.\nsudo apt install vpcs After doing this, GNS3 would complain that there is a \u0026ldquo;Mismatch in the VPCS versions\u0026rdquo;. In order to fix this, we now need to build the latest version of VPCS ourselves.\n2.2 First we need to download the source code from Github: https://github.com/GNS3/vpcs/releases\nOnce downloaded, extract the \u0026ldquo;.zip\u0026rdquo; file and cd into the \u0026ldquo;src\u0026rdquo; folder\ncd src then run the following command to build the VPCS binary\n./mk.sh Once it has completed the build. We will remove the old version of VPCS.\nsudo rm /usr/bin/vpcs Then copy the new version to \u0026ldquo;/usr/bin/\u0026rdquo;. So for example:\nsudo cp /home/youtube/Downloads/vpcs-0.8.3/src/vpcs /usr/bin/vpcs That should be all the issues fixed. You can then run GNS3\ngns3 ","date":"2024-09-27T00:00:00Z","image":"http://localhost:1313/post/-gns3-install-debian-27-09-2024/splash_hu9758382262681769637.png","permalink":"http://localhost:1313/post/-gns3-install-debian-27-09-2024/","title":"How To Install GNS3 On Linux - Debian based"},{"content":" Introduction This is how to connect two instances together using an IPSec connection. When setting up IPsec VPNs there are two main types of scenario’s with their own advantages and disadvantages. The two main types are: Policy based Route based (VTI)\nThe main difference between the two is that the \u0026ldquo;VTI\u0026rdquo; method has the advantage that allows you to use standard or advanced routing technologies to forward traffic around tunnels. The Policy based method is easier and quicker to setup, however has. less flexibility.\nThis guide will focus on setting up a \u0026ldquo;Policy Based\u0026rdquo; connection.\nInitial Setup Each instance needs to have at least one unique LAN IP subnet for each side of your connection. If you use the same subnet on both instances, OpnSense will route the traffic to the local subnet and not to the other instance.\nBuilding A Hostname: build1\nWAN IP: 158.10.10.2\nLAN Net: 192.168.10.0/24\nOPNSENSE IP: 192.168.10.1\nLAN DHCP Range: 192.168.10.100-192.168.10.200\nBuilding B Hostname: build1\nWAN IP: 164.20.20.2\nLAN Net: 192.168.20.0/24\nOPNSENSE IP: 192.168.20.1\nLAN DHCP Range: 192.168.20.100-192.168.20.200\nSetup Step 1 - Key pairs Go to the VPN-\u0026gt;IPsec-\u0026gt;Key Pairs option in the menu and create a new key on both hosts, then copy the public part from Site A to Site B and vise versa. Keys may easily be generated with the gear button in the Key type field.\nProperty Name Key Type Generate site A B1 ECDSA - NIST P-384 Yes site B B2 ECDSA - NIST P-384 Yes Click on the \u0026ldquo;Gear\u0026rdquo; Icon to Generate a key. Then using the Public Key Generated at each location From The Above:\nProperty Name Key Type Public Key Private Key site A B2 ECDSA - NIST P-384 B2 Public Key Blank site B B1 ECDSA - NIST P-384 B2 Public Key Blank Click Save.\nStep 2 - Setting up the IPsec connection In order to setup a simple (and common) IPsec connection, we go to\nVPN-\u0026gt;IPsec-\u0026gt;Connections and add a new entry.\nGeneral settings Side by side the following general settings need to be set in this case, which configures the first part of the security association between both sites:\nProperty Local addresses Remote addresses site A 158.10.10.2 164.20.20.2 site B 164.20.20.2 158.10.10.2 Press to go to the next step.\nAuthentication Next we will need to add local authentication (add a new record in the local grid):\nProperty Authentication Id Public Keys site A Public Key hostA hostA-key site B Public Key hostB hostB-key Then we need to set Pre-Shared Key for remote authentication as well:\nProperty Authentication Id Public Keys site A Public Key hostB hostB-key site B Public Key hostA hostA-key Children Finally we may add a child which will add security policies and kernel routes.\nProperty Mode Policies Local Remote site A Tunnel checked 192.168.10.0/24 192.168.20.0/24 site B Tunnel checked 192.168.20.0/24 192.168.10.0/24 Save and apply\nFinally save the settings and check the \u0026ldquo;IPSEC\u0026rdquo; checkbox. hit apply on the connections page to establish the tunnel.\nValidate Now can check if the tunnel is active on both side using the status overview in\nVPN-\u0026gt;IPsec-\u0026gt;Status Overview\nInstall firewall policies With the tunnel active, all that remains is to accept traffic on this tunnel using the Firewall-\u0026gt;Rules-\u0026gt;IPsec menu option.\nIn this guide I will just create a rule to allow all IPv4 traffic through, however in production you should only allow the traffic you want through. Do this for both buildings\nThen Add the following Wan Rules: Firewall-\u0026gt;Rules-\u0026gt;WAN\nUDP port 500\nUDP port 4500\nESP\nRemember to set the source as the WAN IP from the opposite building. So for building 1, The source will be building 2\u0026rsquo;s IP and vice versa.\nBuilding 1 rules below: Building 2 rules below: Extra Optionals See the original OpnSense Documents for more information: https://docs.opnsense.org/manual/vpnet.html#ipsec\nTuning considerations Depending on the workload (many different IPsec flows or a single flow), it might help to enable multithreaded crypto mode on ipsec, in which case cryptographic packets are dispatched to multiple processors (especially when only a single tunnel is being used).\nIn order to do so, add or change the following tunable in System ‣ Settings ‣ Tunables:\nNote\nnet.inet.ipsec.async_crypto = 1 To distribute load better over available cores in the system, it may help to enable receive side scaling. In which case the following tunables need to be changed:\nNote\nnet.isr.bindthreads = 1 net.isr.maxthreads = -1 \u0026lt;– equal the number of cores in the machine net.inet.rss.enabled = 1 net.inet.rss.bits = X (The amount of cores, see below) For rss bits use the following values: for 2-core systems, use ‘1’ for 4-core systems, use ‘2’ for 8-core systems, use ‘3’ for 16-core systems, use ‘4’ Etc. You will need to reboot the OpnSense Instance for the settings to work.\nNote regarding IPS and rss When Suricata is running in IPS mode, Netmap is utilized to fetch packets off the line for inspection. By default, OPNsense has configured Suricata in such a way that the packet which has passed inspection will be re-injected into the host networking stack for routing/firewalling purposes. The current Suricata/Netmap implementation limits this re-injection to one thread only. Work is underway to address this issue since the new Netmap API (V14+) is now capable of increasing this thread count. Until then, no benefit is gained from RSS when using IPS.\n","date":"2024-08-28T00:00:00Z","image":"http://localhost:1313/post/opnsense-ipsec-point-to-point-connections-policy-based-28-08-2024/lab_hu2348259672567418287.png","permalink":"http://localhost:1313/post/opnsense-ipsec-point-to-point-connections-policy-based-28-08-2024/","title":"OpnSense IPSec (Point to Point) connections (Policy based)"},{"content":" ","date":"2024-08-07T00:00:00Z","image":"http://localhost:1313/post/opendns-on-opnsense-07-08-2024/splash_hu1873830496945139741.jpg","permalink":"http://localhost:1313/post/opendns-on-opnsense-07-08-2024/","title":"Set up openDNS Service on OpnSense"},{"content":" Intro In this guide we will create a Windows 10, OpnSense and a Debian 12 node.\nThe official notes can be found on EVE-NG\u0026rsquo;s website:\nhttps://www.eve-ng.net/index.php/documentation/howtos/\nThere are guides on how to add and create all available nodes on EVE-NG. So it is recommended to have a look at them in order for you to add the nodes you require.\nNode VM Creations Download the ISO\u0026rsquo;s Download the desired ISO\u0026rsquo;s. In my case I have downloaded:\nOpnSense 24\nWindows 10 (64 bit)\nDebian 12 (net Installer)\nCreate the folders on EVE-NG SSH into the EVE-NG machine and create a folder in the:\nbash /opt/unetlab/addons/qemu/\nfolder\nFor example I created the following:\nmkdir /opt/unetlab/addons/qemu/win-10x64Pro/ mkdir /opt/unetlab/addons/qemu/linux-debian-12/ mkdir /opt/unetlab/addons/qemu/opnsense-24/ Copy the ISO\u0026rsquo;s to the folders Next I will use SCP to copy the ISO\u0026rsquo;s. from my downloads folder into the desired folder we have created for the VM\u0026rsquo;s.\nIt is important that we name the ISO cdrom.iso when we add it to the folder. Here are my SCP commands\nOpnSense:\nscp /Users/jono/Downloads/OPNsense-24.1-dvd-amd64.iso root@10.0.0.9:/opt/unetlab/addons/qemu/opnsense-24/cdrom.iso Debian 12:\nscp /Users/jono/Downloads/debian-12.6.0-amd64-netinst.iso root@10.0.0.9:/opt/unetlab/addons/qemu/linux-debian-12/cdrom.iso Windows 10:\nscp /Users/jono/Downloads/Win10_22H2_EnglishInternational_x64v1.iso root@10.0.0.9:/opt/unetlab/addons/qemu/win-10x64Pro/cdrom.iso Create The Virtual Disks (HDD\u0026rsquo;s) for the VM\u0026rsquo;s Next we need to create the virtual disks for each VM / Node to use.\nSSH into the EVE-NG again and do the following:\nOpnSense:\ncd /opt/unetlab/addons/qemu/opnsense-24/ /opt/qemu/bin/qemu-img create -f qcow2 virtioa.qcow2 10G Debian 12:\ncd /opt/unetlab/addons/qemu/linux-debian-12/ /opt/qemu/bin/qemu-img create -f qcow2 virtioa.qcow2 30G Windows 10:\ncd /opt/unetlab/addons/qemu/win-10x64Pro/ /opt/qemu/bin/qemu-img create -f qcow2 virtioa.qcow2 60G Installing the OSes on the VMs / Nodes Log In to EVE-NG Using the \u0026ldquo;HTML 5\u0026rdquo; session. Create a new lab and add the newly created nodes. Connect the node to your home LAN cloud/internet in order for it to be able to get updates and fully install from the internet. However, do not add the Windows 10 node to the internet, this will just quickly allow us to bypass the \u0026ldquo;Online Microsoft Account\u0026rdquo; link stage. start each node and complete the installation of. the OSes. Once completed, Shutdown and stop each node. Commit VM\u0026rsquo;s Check lab ID number on EVE side bar “Lab details” and we need to also get the \u0026ldquo;Node Number\u0026rdquo;. number of each node which can be seen in the \u0026ldquo;Nodes\u0026rdquo; List\nSSH into the EVE-NG machine and cd into the labs folder.\ncd /opt/unetlab/tmp/0/the-lab-id-here/ We will go into the nodes one by one and convert the temp VM to be the \u0026ldquo;main\u0026rdquo; vm for all future nodes of that type. For example cd /opt/unetlab/tmp/0/the-lab-id-here/0/ qemu-img commit virtioa.qcow2 cd /opt/unetlab/tmp/0/the-lab-id-here/1/ qemu-img commit virtioa.qcow2 cd /opt/unetlab/tmp/0/the-lab-id-here/2/ qemu-img commit virtioa.qcow2 Removes ISO\u0026rsquo;s from the machine Now we need to cd into each the VM folders again and remove the ISO images.\nOpnSense:\ncd /opt/unetlab/addons/qemu/opnsense-24/ rm -f cdrom.iso Debian 12:\ncd /opt/unetlab/addons/qemu/linux-debian-12/ rm -f cdrom.iso Windows 10:\ncd /opt/unetlab/addons/qemu/win-10x64Pro/ rm -f cdrom.iso Fix file Permissions lastly we need to run the following to fix any permission issues\n/opt/unetlab/wrappers/unl_wrapper -a fixpermissions Optional - Compress the VM\u0026rsquo;s HDD\u0026rsquo;s You can cd into each VM\u0026rsquo;s folder again and sparsify the virtual disk to compress the them, for example to compress the windows 10 VM we will do the following: cd /opt/unetlab/addons/qemu/win-10x64Pro/ virt-sparsify --compress virtioa.qcow2 compressedvirtioa.qcow2 This will take some time and another compressed image will be created in the same image directory\nRename the original image to virtioa-o.qcow2: mv virtioa.qcow2 virtioa-o.qcow2 Rename the compressed image name to virtioa.qcow2: mv compressedvirtioa.qcow2 virtioa.qcow2 now you can test your new compressed image on a lab, just wipe the node and start it. If the compressed node works fine, you can delete your original source image:\nrm -f. virtioa-o.qcow2 Please note I tried to compress windows 10 and when using it, it would not boot correctly. I attempted this twice and had issues. So I reverted to use the original virtual disk.\nWebUI Access Method To setup OpnSense web UI from wan in shell on opnsense: pfctl -d You ca now access GUI via WAN IP disable the \u0026ldquo;Block bogon\u0026rdquo; traffic: interfaces-\u0026gt;WAN \u0026ldquo;Untick\u0026rdquo; both \u0026ldquo;block private networks\u0026rdquo; and block \u0026ldquo;Bogon Networks\u0026rdquo; I would also go to Firewall \u0026gt; Settings \u0026gt; Advanced and check \u0026ldquo;Disable anti-lockout\u0026rdquo;. Firewall \u0026ndash;\u0026gt; Settings\u0026ndash;\u0026gt; Advanced \u0026ldquo;Disable reply-to on WAN rules\u0026rdquo; create the following Firewall rule. Firewall \u0026gt; Rules \u0026gt; WAN Click on the \u0026#34;+\u0026#34; to add a rule. Add this rule: Action: allow Source: any Destination: This Firewall Destination port: 443 ","date":"2024-07-16T00:00:00Z","image":"http://localhost:1313/post/eve-ng-create-win-lin-op-nodes-16-07-2024/splash_hu6424384876371777986.jpg","permalink":"http://localhost:1313/post/eve-ng-create-win-lin-op-nodes-16-07-2024/","title":"How to create a Windows, Linux and OpnSense node in EVE-NG"},{"content":" Introduction Hi there, Jono here, on a regular basis, I need to test \u0026ldquo;Use Cases\u0026rdquo;, Software configurations and network setups for customers. I also wanted to start working on guides showing more advanced setups that would require multiple servers, networking equipment and cable which can be problematic, both in terms of cost and physical space. So I was thinking about how I could use my single home lab server to better achieve this \u0026ldquo;juggling\u0026rdquo; of tasks and that was when it hit me.\nWhy not use Eve-ng or GNS3?\nEve-ng or \u0026ldquo;emulated virtual environments, next generation\u0026rdquo; and GNS3 or \u0026ldquo;Graphical Network Simulator - 3\u0026rdquo; are in a sense \u0026ldquo;hypervisors\u0026rdquo; which allow you to create virtual machines or containers, which in Eve-ng are called \u0026ldquo;nodes\u0026rdquo; and in \u0026ldquo;GNS3\u0026rdquo; are called \u0026ldquo;Appliances\u0026rdquo;. These. are then used in a \u0026ldquo;drag and drop\u0026rdquo; fashion where you quickly and easily create virtual networks which can then be used. in real world deployment.\nIn the past, I never really owned a device that was powerful enough to run these tools, but. now-a-days, hardware. has become so powerful, you can run these tools on relatively cheap laptops and PC\u0026rsquo;s.\nSince it has been so long since I have tried them, I will be giving them both a try again. In this guide I will be using Eve-ng\u0026rsquo;s community edition, and will do a few \u0026ldquo;labs\u0026rdquo; in it to give it a fair test. In future guides I will move over to GNS3 and after giving that a good test, I will make a video on my experiences.\nNow lets move onto the meat of this guide, and that is how to install Eve-ng on a virtual machine in Proxmox.\nInstallation Download the ISO Download the community edition from: https://www.eve-ng.net/index.php/download/#DL-COMM and upload it to Proxmox\nEnable Nested Virtualisation Nested virtualisation allows you to run a hypervisor within a virtual machine, which is how these tools work, we need to check that is is enabled on Proxmox. If I remember correctly, it used to be disabled by default, however, will all my new Proxmox installations, It appears that it is now enabled by default\nUsing SSH or using Proxmox\u0026rsquo;s built in shell: // For Intel\ncat /sys/module/kvm_intel/parameters/nested // For AMD\ncat /sys/module/kvm_amd/parameters/nested It will either show a \u0026ldquo;Y\u0026rdquo; or \u0026ldquo;N\u0026rdquo;. \u0026ldquo;Y\u0026rdquo; to indicate if it is enabled or \u0026ldquo;N\u0026rdquo; if not.\nTo enable nested virtualisation you just have to do a few simple things, I’d suggest to follow the official article, https://pve.proxmox.com/wiki/Nested_Virtualization incase this changes in the future, but as of today, you can use this quick rundown to get up and running:\n// For Intel\necho \u0026#34;options kvm-intel nested=Y\u0026#34; \u0026gt; /etc/modprobe.d/kvm-intel.conf // For AMD\necho \u0026#34;options kvm-amd nested=1\u0026#34; \u0026gt; /etc/modprobe.d/kvm-amd.conf Reboot or reload the kernel module\n// For Intel\nmodprobe -r kvm_intel modprobe kvm_intel // For AMD\nmodprobe -r kvm_amd modprobe kvm_amd It is recommend to do a full reboot. After the reboot, check if the module is enabled.\nCreate the Virtual Machine Create a Virtual machine with the following: 100GB Disk Space (More the merrier) +- 4GB RAM (More the merrier) CPU set to \u0026ldquo;Host\u0026rdquo; (This is a must) Make sure to attach the Eve-ng ISO Attach it to a network that has internet access (This is a must) the rest is up to you.\nJust a quick notice, that in the video I set the HDD to use \u0026ldquo;VirtIO\u0026rdquo; in stead of \u0026ldquo;SCSI\u0026rdquo; as a saw a few people mention that they where getting better results. However I have not tested this claim myself. It is up to you to decide what you would like to use.\nEve-ng installation Eve-ng uses \u0026ldquo;cloud-init\u0026rdquo; to do a lot of the installation. So depending o the speed of your internet, this process can take a long time. once it is. completed, you will be presented with the configuration phase where you will be guided through configuring your instance.\nIn this case I have set the IP to be 10.0.0.9\nAccess the Web UI once the installation is completed. You can goto the the instance IP in your favourite browser to access the Web UI. The default login details are: admin eve\nReconfigure your Instance If. you have made a mistake during the \u0026ldquo;Configuration\u0026rdquo; stage. You can do the following to run it again.\nSSH into it or directly via the console.\nDelete the \u0026ldquo;Configured\u0026rdquo; file\nrm -f /opt/ovf/.configured and then\nsu - This will rerun the configuration stage.\nConclusion You will now have an Eve-ng Vm up and running, almost ready to use. All that is left is to create \u0026ldquo;nodes\u0026rdquo; that we can use. In the next guide, we will create an OpnSense \u0026ldquo;node\u0026rdquo; and I will show you the method I used to get access to the OpnSense WebUI of that \u0026ldquo;node\u0026rdquo; in order to use and configure it.\n","date":"2024-07-15T00:00:00Z","image":"http://localhost:1313/post/eve-ng-proxmox-12-07-2024/splash_hu6880142792005936797.jpg","permalink":"http://localhost:1313/post/eve-ng-proxmox-12-07-2024/","title":"How to install EVE-NG on Proxmox"},{"content":" ","date":"2024-06-14T00:00:00Z","image":"http://localhost:1313/post/protect-opnsense-with-2fa-14-06-2024/splash_hu2242574947320053178.jpg","permalink":"http://localhost:1313/post/protect-opnsense-with-2fa-14-06-2024/","title":"Protect OpnSense with 2FA"},{"content":" Concept and design In a previous video I made going over the different Multi WAN modes. I spoke about how you could route traffic over different WAN connections to create a form of load balancing. We can use that same concept for monitoring multiple WAN connections from a single monitoring application.\nIn this guide, I will be using a monitoring application called \u0026ldquo;Uptime Kuma\u0026rdquo; mainly due to it being quick to install and extremely simple to setup. However this method will work for any monitoring software that uses a ping (ICMP) to monitor a devices presence.\nInstallation I have created an Ubuntu server VM that is on the \u0026ldquo;Management\u0026rdquo; network. I have given it a static IP of ```10.0.0.3\nFrom there I have created an \u0026#34;Uptime Kuma\u0026#34; container that is ready to go. I simply create a folder in my users home folder called ```docker``` and then created a folder in there called ```kuma``` In the ```kuma``` folder, I then created a file in there called ```docker-compose.yml``` and a folder called ```data```. That is where all the data Uptime Kuma needs to store will go. Below is the docker-compose.yml file I used to get it running: ``` YML version: \u0026#39;3.3\u0026#39; services: uptime-kuma: image: louislam/uptime-kuma:1 container_name: uptime-kuma volumes: - ./data:/app/data - /var/run/docker.sock:/var/run/docker.sock:ro ports: - 3001:3001 # \u0026lt;Host Port\u0026gt;:\u0026lt;Container Port\u0026gt; restart: always Once done, we can simply run the following:\nsudo docker-compose up -d That will create and start the container.\nCreate the monitors Once Uptime Kuma is up and running, we can goto: http://\u0026lt;your.servser.IP\u0026gt;:3001 in your web browser of choice and we can create the following monitors. Change the \u0026lt;your.servser.IP\u0026gt; to the IP of your server.\nFor this guide, we will create three monitors.\nFor the first WAN, we will call it Fibre For the second WAN, we will call it 5G For the VPN, we will call it VPN Create a monitor Click on the + Add New Monitor button on the top left to start creating a new monitor.\nUse the following:\nMonitor Type: ping Friendly Name: \u0026#34;Fibre\u0026#34; Hostname: 8.8.8.8 Heartbeat Interval: 60 Retries: 2 Heartbeat Retry Interval: 20 Description: \u0026#34;Fibre WAN Uptime\u0026#34; Click the save button at the bottom to add the monitor.\nNow repeat this two more times, using the following:\nMonitor Type: ping Friendly Name: \u0026#34;5G\u0026#34; Hostname: 1.1.1.1 Heartbeat Interval: 60 Retries: 2 Heartbeat Retry Interval: 20 Description: \u0026#34;5G WAN Uptime\u0026#34; Monitor Type: ping Friendly Name: \u0026#34;VPN\u0026#34; Hostname: 9.9.9.9 Heartbeat Interval: 60 Retries: 2 Heartbeat Retry Interval: 20 Description: \u0026#34;VPN Uptime\u0026#34; Test that the monitors work Now since the server is on the \u0026ldquo;Management\u0026rdquo; network. The pings will most probably use the default WAN mode that you have set for that network. So in this instance it is on a \u0026ldquo;failover\u0026rdquo; WAN group that uses the \u0026ldquo;Fibre\u0026rdquo; WAN first and the \u0026ldquo;5G\u0026rdquo; WAN as the failover.\nSo if we unplug the \u0026ldquo;Fibre\u0026rdquo; connection, we should see that all the connections will be marked as down for a few moments, until the failover kicks in.\nThis will let us know that the monitor are working, however we want to have the monitors monitor the desired individual WAN connections.\nWe will do that on our Firewall by creating rules in order to route the pings through the correct WAN connection / Gateways.\nFirewall rules. This is not an \u0026ldquo;OpnSense\u0026rdquo; specific feature. This will work with any firewall where you have the ability to create detailed firewall rules. You will just need to consult the user manual for that firewall in order to see how to create custom rules.\nHowever, in this guide I will use OpnSense as my firewall.\nFirewall rule concept The rule will allow ICMP traffic to Pass from the server with IP \u0026lt;your.server.IP\u0026gt; through a specific Gateway depending on the destination IP\nLogin to your Firewall. In OpnSens, I will go to the \u0026ldquo;Management\u0026rdquo; network in the \u0026ldquo;Rules\u0026rdquo; section and create a new rule. Use the following but change it to suit your setup. Action: Pass Interface: \u0026lt;Your Network Name\u0026gt; Direction: in TCP/IP Version: IPv4 Protocol: ICMP ICMP Type: any Source: Single host or Network \u0026lt;your.server.ip\u0026gt; / 32 Destination: Single host or Network \u0026lt;ping.to.ip\u0026gt; / 32 Log: enabled (Optional) Description: Ping for Fibre Monitoring Gateway: \u0026lt;Your Desired WAN Connection\u0026gt; So for this guide / my network it will be the following:\nFibre Uptime Monitoring:\nAction: Pass Interface: Management Direction: in TCP/IP Version: IPv4 Protocol: ICMP ICMP Type: any Source: Single host or Network \u0026lt;your.server.ip\u0026gt; / 32 Destination: Single host or Network 8.8.8.8 / 32 Log: enabled (Optional) Description: Ping for Fibre Monitoring Gateway: \u0026lt;Your Desired WAN Connection\u0026gt; 5G Uptime Monitoring:\nAction: Pass Interface: Management Direction: in TCP/IP Version: IPv4 Protocol: ICMP ICMP Type: any Source: Single host or Network \u0026lt;your.server.ip\u0026gt; / 32 Destination: Single host or Network 1.1.1.1 / 32 Log: enabled (Optional) Description: Ping for 5G Monitoring Gateway: \u0026lt;Your Desired WAN Connection\u0026gt; VPN Uptime Monitoring:\nAction: Pass Interface: Management Direction: in TCP/IP Version: IPv4 Protocol: ICMP ICMP Type: any Source: Single host or Network \u0026lt;your.server.ip\u0026gt; / 32 Destination: Single host or Network 9.9.9.9 / 32 Log: enabled (Optional) Description: Ping for VPN Monitoring Gateway: \u0026lt;Your Desired WAN Connection\u0026gt; With those rules created and applied, we can test again and we should now get the desired results.\nTest that the monitors work individually If we now unplug the first WAN connection in this case the \u0026ldquo;Fibre\u0026rdquo; WAN. We will see that only the \u0026ldquo;Fibre\u0026rdquo; monitor will show as \u0026ldquo;down\u0026rdquo;.\nIf the \u0026ldquo;VPN\u0026rdquo; connection was connected on the \u0026ldquo;Fibre\u0026rdquo; WAN, that too will show as \u0026ldquo;down\u0026rdquo; until it reconnects to the next WAn connection.\nIf we plug it back in, the monitor will return to \u0026ldquo;UP\u0026rdquo;.\nYou can now do this test on the \u0026ldquo;5G\u0026rdquo; WAN and you should get the expected results.\nConclusion This was a quick guide showing you how to monitor multiple WANs / Gateways using a single instance of your monitoring software. The power of firewall rules helps you achieve this setup and is a very quick and flexible option that doesn\u0026rsquo;t require complicated network setups.\n","date":"2024-05-31T00:00:00Z","image":"http://localhost:1313/post/multi-wan-uptime-monitoring/splash_hu7666865233627531890.jpg","permalink":"http://localhost:1313/post/multi-wan-uptime-monitoring/","title":"Multi WAN Uptime Monitoring"},{"content":" Intro In this guide we will setup up a VPN client on OpnSense, this will allow us to create a gateway that we can use for all traffic we would like to use through a VPN. A common use is to route all IOT devices through the VPN connection so that our \u0026ldquo;real\u0026rdquo; public IP address can not be seen by these kind of devices.\nSetting up a Client VPN requires four main steps:\nAdd VPN server as a \u0026ldquo;Certificate Authority\u0026rdquo; Create the VPN Client Assign and Enable the interface Set up the outbound firewall rules I have decided to use Surfshark as my VPN service since I have been using them for years, however you can do this with any OpnVPN provider (AirVPN for example). I would recommend that you double check the providers support / manuals for their recommended settings, but this guide will give you a starting point on how to get started.\nA Full guide by Shurfshark can be found here: https://support.surfshark.com/hc/en-us/articles/12434921071890-How-to-set-up-Surfshark-on-an-OPNsense-router\nHowever a lot of steps that are incorrect in their guide and do not work for my setup, the DNS steps in particular. This guide is the steps that I used to set this all up.\nIf you are interested in using Surfshark, you can use my affiliate link: https://surfshark.club/friend/7p3dwxCf\nFor more information about the referral program: https://surfshark.com/refer-a-friend\nGet your Surfshark credentials and server location Login to your Surfshark account and go to the following link to get your credentials and to see a list of VPN server locations you can connect to: https://my.surfshark.com/vpn/manual-setup/main/openvpn\nAdd Surfshark to our \u0026ldquo;Certificate Authority\u0026rdquo; Navigate to System \u0026gt; Trust \u0026gt; Authorities and click on the +Add button. Once there, you should be able to see the window below: Give it a \u0026ldquo;Descriptive Name\u0026rdquo;, in this case I will call it SurfShark_Auth\nCopy and paste the following Certificate data in to the \u0026ldquo;Certificate Data\u0026rdquo; field\n-----BEGIN CERTIFICATE----- MIIFTTCCAzWgAwIBAgIJAMs9S3fqwv+mMA0GCSqGSIb3DQEBCwUAMD0xCzAJBgNV BAYTAlZHMRIwEAYDVQQKDAlTdXJmc2hhcmsxGjAYBgNVBAMMEVN1cmZzaGFyayBS b290IENBMB4XDTE4MDMxNDA4NTkyM1oXDTI4MDMxMTA4NTkyM1owPTELMAkGA1UE BhMCVkcxEjAQBgNVBAoMCVN1cmZzaGFyazEaMBgGA1UEAwwRU3VyZnNoYXJrIFJv b3QgQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDEGMNj0aisM63o SkmVJyZPaYX7aPsZtzsxo6m6p5Wta3MGASoryRsBuRaH6VVa0fwbI1nw5ubyxkua Na4v3zHVwuSq6F1p8S811+1YP1av+jqDcMyojH0ujZSHIcb/i5LtaHNXBQ3qN48C c7sqBnTIIFpmb5HthQ/4pW+a82b1guM5dZHsh7q+LKQDIGmvtMtO1+NEnmj81BAp FayiaD1ggvwDI4x7o/Y3ksfWSCHnqXGyqzSFLh8QuQrTmWUm84YHGFxoI1/8AKdI yVoB6BjcaMKtKs/pbctk6vkzmYf0XmGovDKPQF6MwUekchLjB5gSBNnptSQ9kNgn TLqi0OpSwI6ixX52Ksva6UM8P01ZIhWZ6ua/T/tArgODy5JZMW+pQ1A6L0b7egIe ghpwKnPRG+5CzgO0J5UE6gv000mqbmC3CbiS8xi2xuNgruAyY2hUOoV9/BuBev8t tE5ZCsJH3YlG6NtbZ9hPc61GiBSx8NJnX5QHyCnfic/X87eST/amZsZCAOJ5v4EP SaKrItt+HrEFWZQIq4fJmHJNNbYvWzCE08AL+5/6Z+lxb/Bm3dapx2zdit3x2e+m iGHekuiE8lQWD0rXD4+T+nDRi3X+kyt8Ex/8qRiUfrisrSHFzVMRungIMGdO9O/z CINFrb7wahm4PqU2f12Z9TRCOTXciQIDAQABo1AwTjAdBgNVHQ4EFgQUYRpbQwyD ahLMN3F2ony3+UqOYOgwHwYDVR0jBBgwFoAUYRpbQwyDahLMN3F2ony3+UqOYOgw DAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAn9zV7F/XVnFNZhHFrt0Z S1Yqz+qM9CojLmiyblMFh0p7t+Hh+VKVgMwrz0LwDH4UsOosXA28eJPmech6/bjf ymkoXISy/NUSTFpUChGO9RabGGxJsT4dugOw9MPaIVZffny4qYOc/rXDXDSfF2b+ 303lLPI43y9qoe0oyZ1vtk/UKG75FkWfFUogGNbpOkuz+et5Y0aIEiyg0yh6/l5Q 5h8+yom0HZnREHhqieGbkaGKLkyu7zQ4D4tRK/mBhd8nv+09GtPEG+D5LPbabFVx KjBMP4Vp24WuSUOqcGSsURHevawPVBfgmsxf1UCjelaIwngdh6WfNCRXa5QQPQTK ubQvkvXONCDdhmdXQccnRX1nJWhPYi0onffvjsWUfztRypsKzX4dvM9k7xnIcGSG EnCC4RCgt1UiZIj7frcCMssbA6vJ9naM0s7JF7N3VKeHJtqe1OCRHMYnWUZt9vrq X6IoIHlZCoLlv39wFW9QNxelcAOCVbD+19MZ0ZXt7LitjIqe7yF5WxDQN4xru087 FzQ4Hfj7eH1SNLLyKZkA1eecjmRoi/OoqAt7afSnwtQLtMUc2bQDg6rHt5C0e4dC LqP/9PGZTSJiwmtRHJ/N5qYWIh9ju83APvLm/AGBTR2pXmj9G3KdVOkpIC7L35dI 623cSEC3Q3UZutsEm/UplsM= -----END CERTIFICATE----- Save the certificate. You will see that the certificate is valid until 2028 from Surfshark. Creating the client connection Navigate to VPN \u0026gt; OpenVPN \u0026gt; Clients (Legacy) and click on the +Add button. Once there, you should be able to see the window below: Fill in the following:\nDescription: Any name you like, for example, ShurfShark_UK\nServer mode: Peer to Peer (SSL/TLS);\nProtocol: UDP (you can also use UDP4);\nDevice mode: tun\nInterface: any\nRemote server: Host or address: uk-lon.prod.surfshark.com (change to the hostname of the server you are going to use chosen from the \u0026ldquo;Get your Surfshark credentials and server location\u0026rdquo; section)\nPort: 1194\nRetry DNS resolution: UnCheck\nProxy host or address: Leave blank\nProxy port: Leave blank\nProxy Authentication: None\nUSER AUTHENTICATION SETTINGS\nUsername/Password: fill in your Surfshark Credentials from \u0026ldquo;Get your Surfshark credentials and server location\u0026rdquo; section\nCRYPTOGRAPHIC SETTINGS:\nTLS Authentication: Enabled – Authentication only\nTLS Shared Key: Paste the contents below\n-----BEGIN OpenVPN Static key V1----- b02cb1d7c6fee5d4f89b8de72b51a8d0 c7b282631d6fc19be1df6ebae9e2779e 6d9f097058a31c97f57f0c35526a44ae 09a01d1284b50b954d9246725a1ead1f f224a102ed9ab3da0152a15525643b2e ee226c37041dc55539d475183b889a10 e18bb94f079a4a49888da566b9978346 0ece01daaf93548beea6c827d9674897 e7279ff1a19cb092659e8c1860fbad0d b4ad0ad5732f1af4655dbd66214e552f 04ed8fd0104e1d4bf99c249ac229ce16 9d9ba22068c6c0ab742424760911d463 6aafb4b85f0c952a9ce4275bc821391a a65fcd0d2394f006e3fba0fd34c4bc4a b260f4b45dec3285875589c97d3087c9 134d3a3aa2f904512e85aa2dc2202498 -----END OpenVPN Static key V1----- Peer Certificate Authority: SurfShark_Auth\nClient Certificate: None (Username and Password required)\nEncryption Algorithm: AES-256-GCM (256 bit key, 125 bit block, TLS client \\ server mode only)\nAuth Digest Algorithm: SHA512\nTUNNEL SETTINGS:\nIPv4 tunnel network: Leave blank\nIPv6 tunnel network: Leave blank\nIPv4 remote network: Leave blank\nIPv6 remote network: Leave blank\nLimit outgoing bandwidth: Leave blank\nCompression: No Preference\nType-of-service: Leave unchecked\nDon’t pull routes: Check\nDon’t add/remove routes: Check\nADVANCED CONFIGURATION:\nAdvanced: Paste the contents down below\nremote-random; tun-mtu 1500; tun-mtu-extra 32; mssfix 1450; persist-key; persist-tun; reneg-sec 0; remote-cert-tls server; Verbosity level: 3 (recommended)\nClick on Save. Navigate to VPN \u0026gt; OpenVPN \u0026gt; Connection Status You should see that the connection is \u0026ldquo;Connected\u0026rdquo;. Assigning and Creating the Interface Navigate to Interfaces \u0026gt; Assignments\nAdd the \u0026ldquo;VPN\u0026rdquo; interface and give it a Description.\nClick on the \u0026ldquo;Add\u0026rdquo; button and then the \u0026ldquo;Save\u0026rdquo; button.\nNavigate to the new interface you just created and then check the \u0026ldquo;enabled\u0026rdquo; checkbox. Scroll down to the bottom of the page and \u0026ldquo;Save\u0026rdquo; and then click on the \u0026ldquo;Apply Changes\u0026rdquo; button\nCreate an Outbound NAT rule Navigate to Firewall \u0026gt; NAT \u0026gt; Outbound, select Hybrid outbound NAT rule generation (automatically generated rules are applied after manual rules), click Save and Apply Changes. Click on the +Add button on top, on the edit menu, select Interface as \u0026ldquo;SurfShark_UK\u0026rdquo;. Leave anything else as it is by default, Give it a description SurfShark_UK_OUT for example, click Save, and Apply Changes. Edit the Management firewall rules to route the traffic through the VPN. Navigate to Firewall -\u0026gt; Rules -\u0026gt; MANAGEMENT and that click on the edit button next to IPv4. Scroll down and under Advanced features, select Gateway as SurfShark_UK_VPNV4. Click Save. Test the connection If we do a simple speed test, we will see that our IP address and Location is now showing as \u0026ldquo;London\u0026rdquo;. The VPN gateway is ready to be used.\n","date":"2024-03-22T00:00:00Z","image":"http://localhost:1313/post/surfshark-client-opnsense-22-03-2024/splash_hu4887603216512067952.jpg","permalink":"http://localhost:1313/post/surfshark-client-opnsense-22-03-2024/","title":"Setup Surfshark OpenVPN Client on OpnSense"},{"content":" ","date":"2024-03-12T00:00:00Z","image":"http://localhost:1313/post/opnsense-dns-and-block-list-setup-12-03-2024/splash_hu3621171740895142371.jpg","permalink":"http://localhost:1313/post/opnsense-dns-and-block-list-setup-12-03-2024/","title":"OpnSense DNS and Block List Setup"},{"content":" ","date":"2024-03-01T00:00:00Z","image":"http://localhost:1313/post/finishing-the-management-network-01-03-2024/splash_hu10869189737215078767.jpg","permalink":"http://localhost:1313/post/finishing-the-management-network-01-03-2024/","title":"Finishing the Management Network"},{"content":" Introduction This is just a quick guide on how to add another drive to an existing RAID 0 virtual disk on th H700 RAID Controller.\nA use case scenario: I have a 500GB HDD that I use as a \u0026ldquo;Directory\u0026rdquo; disk in Proxmox to store \u0026ldquo;ISO images\u0026rdquo; and \u0026ldquo;Virtual Machine HDDs\u0026rdquo;.\nThis drive is a RAID 0 virtual disk created on a H700 RAID Controller.\nI would like to add another 500GB hard drive to it to increase the size of it. Below is the process on how to do it using the Dell OpenManage Server Administrator.\nHow to add a hard drive to a RAID 0 virtual disk on a H700 Controller Make sure to back up your files first, You never know if something will go wrong, So always make sure you have a working backup\nLogin to the OpenManage Server Administrator Web UI You can see how I installed it on proxmox in the following post: https://jono-moss.github.io/post/dell-openanage-server-administrator-12-01-2024/\nor you can download and run the Live CD from Dells website: https://www.dell.com/support/home/en-us/Drivers/DriversDetails?driverId=C31J4\nOnce Logged in. Goto the the \u0026ldquo;Virtual disks\u0026rdquo; under the \u0026ldquo;PERC H700 Integrated\u0026rdquo; menu. storage -\u0026gt; PERC H700 Integrated -\u0026gt; Virtual disks In the \u0026ldquo;Drop Down\u0026rdquo; list next to the existing RAID 0 Virtual disk that you want to expand. Choose the \u0026ldquo;Reconfigure\u0026rdquo; option. Then click on the \u0026ldquo;Execute\u0026rdquo; button. Select the hard drives you would like to add to the RAID 0 Virtual Disk. Click on the \u0026ldquo;Continue\u0026rdquo; button.\nYou will be presented with a screen where you can change the RAID type, leave it as RAID 0. Click on the \u0026ldquo;Continue\u0026rdquo; button.\nIf a warning message opens due to the total disk size being large. Click the \u0026ldquo;Continue\u0026rdquo; button again and accept the \u0026ldquo;Information\u0026rdquo; message that will pop up\nYou will be presented with a screen showing you what the results will be and what the total Virtual Disk size will be once it is completed. Click on the \u0026ldquo;Finish\u0026rdquo; button to start the \u0026ldquo;Reconfiguration\u0026rdquo; process.\nDepending on the speed of your hard drives and the total size of them, the \u0026ldquo;Reconstructing\u0026rdquo; process can take hours to days to complete. For example for me adding a 500GB (12 year old HDD) to the Virtual Disk took just under 9 hours.\nOnce it has completed, you will see the new size of the disk. Now all that was left is to restart the server so that Proxmox / Debian can see the hard drive size change. Please note, when rebooting the server, the os changed the drive to \u0026ldquo;/dev/sdb\u0026rdquo;, which now has \u0026ldquo;999.12GB\u0026rdquo; space. But the partition is still only using \u0026ldquo;499.56GB\u0026rdquo;. I will now need to resize the partition (If I want) or I can create a new partition with the free space. About the process The process is \u0026ldquo;additive\u0026rdquo;, so it is a non interrupting and non destructive process. You can continue to use the virtual disk while the \u0026ldquo;Reconstructing\u0026rdquo; is in progress. So for example I made an \u0026ldquo;Ubuntu Virtual Machine\u0026rdquo; saved and running on the RAID 0 virtual disk while it was still in progress.\n","date":"2024-02-16T00:00:00Z","image":"http://localhost:1313/post/h700-raid-controller-how-to-expand-a-raid-0/splash_hu4528373861078182252.jpg","permalink":"http://localhost:1313/post/h700-raid-controller-how-to-expand-a-raid-0/","title":"How to add a new hard drive to an existing RAID 0 Virtual Disk on a H700 RAID Controller"},{"content":" Introduction The first step in creating our new OpnSense VM, is to get our network bridges setup and ready to use. Once we have that in order, we will move onto creating the virtual machine and attaching the network bridges to it.\nWe will then move onto Installing OpnSense onto the virtual machine and do some initial configurations in the OpnSense shell.\nLastly we will login to the OpnSense Web UI to add and configure all the network interfaces and services.\nThis is going to be a long but very fun project, let\u0026rsquo;s get started.\nFiguring out what port belongs to which network name An easy way on how to know which physical port belongs to the port name in Proxmox, is to do the following:\nOpen Up two Proxmox web UI instances in your browser. One will have the \u0026ldquo;Network\u0026rdquo; section open and the other we will have the \u0026ldquo;Shell\u0026rdquo; open. Ps since my screen has a small real estate to work on, I will just have them open in tabs rather than two windows.\nUsing the following command in the shell, we can see which network ports are in the \u0026ldquo;UP\u0026rdquo; state:\nip a | grep \u0026#39;state UP\u0026#39; If i run that now, I will see that the main Proxmox connection (Port and bridge) is up.\nSo it shows that eno1 and vmbr0 is up. If we check on the \u0026ldquo;Network\u0026rdquo; section we can see that it is indeed the main Proxmox connections and it is up since we are currently connected to it.\nJust as a side note, remember to always label your cables to help with avoiding the headache of having to trace cables in the future.\nWe will now use this method to figure out the name of the port we will be using for our first \u0026ldquo;WAN\u0026rdquo; connection.\nConnect your first WAN cable in to the port you want to use, in this case, the first port of the first NIC. See the \u0026ldquo;Home Lab Network Design\u0026rdquo; post for the diagram I\u0026rsquo;m using to set up my network: https://jono-moss.github.io/post/home-lab-network-design-26-01-2024/\nNow do the same command as in the previous step and we should now see the name of the port associated to it:\nFrom the screenshot below, we can see the port is named \u0026ldquo;enp7s0f0\u0026rdquo;\nWith this information, we can add a comment to that port so we will know in the future, what it is used for.\nWe will repeat this process with the next WAN port. We will unplug the connection from the first port and will plug it into the third port to see what we get. Then we can create a comment on that port.\nFrom the above results, we can now make the conclusion that the last two ports will be the following: enp7s0f1 will be our Management network and enp9s0f1 will be our Trunk network. We can add comments to them and we are now ready to create the bridges.\nSetup the network bridges on Proxmox Click on the \u0026ldquo;Create\u0026rdquo; button and choose the \u0026ldquo;Linux Bridge\u0026rdquo; option. Under the \u0026ldquo;Bridge Port\u0026rdquo; input, we will put in the name of the first WAN port, in this case it is enp7s0f0. We can also give it a comment like \u0026ldquo;OP WAN1\u0026rdquo; so that we will know wht this new bridge network will be for. Repeat this process for all the other ports till you have 4 new bridge connections. Now the last setting we need to enable is the \u0026ldquo;VLAN Aware\u0026rdquo; option on the \u0026ldquo;Trunk\u0026rdquo; bridge. This will let Proxmox know that VLAN traffic will be used on it. Once completed, click on the \u0026ldquo;Apply Configuration\u0026rdquo; button and accept the confirmation dialog to save the networks. We are now ready to move onto downloading the OpnSense ISO.\nDownloading the OpnSense ISO Goto the OpnSense download page and make sure to get the \u0026ldquo;DVD\u0026rdquo; version. https://opnsense.org/download/ Extract the iso from the .bz2 file. Please not that on MacOS you will need a 3rd party extraction tool. In my case I used an app called \u0026ldquo;The Unarchiver\u0026rdquo;. On Proxmox, goto the \u0026ldquo;local\u0026rdquo; drive and select the \u0026ldquo;ISO Images\u0026rdquo; menu. From there select the \u0026ldquo;upload\u0026rdquo; button. Click on the \u0026ldquo;Select File\u0026rdquo; button and find the iso file you downloaded. Then click on the \u0026ldquo;Upload\u0026rdquo; button to begin the upload. The ISO will be uploaded and we can now move to creating the virual machine. Creating the Virtual Machine Click on the \u0026ldquo;Create VM\u0026rdquo; blue button on the top right of the Proxmox UI. Make sure the \u0026ldquo;Advanced\u0026rdquo; box is checked. It is next to the \u0026ldquo;Back\u0026rdquo; button. Give the VM a name, in this case I will call it \u0026ldquo;OpnSense\u0026rdquo;. Enable the \u0026ldquo;Start at boot\u0026rdquo; box and set the \u0026ldquo;Start/Shutdown Order\u0026rdquo; to \u0026ldquo;1\u0026rdquo;. This will make sure that OpnSense is the first VM to start when Proxmox boots up. Click on the \u0026ldquo;Next\u0026rdquo; button once you have done so. Select the \u0026ldquo;OpnSense\u0026rdquo; ISO we uploaded in the previous section and then click on the \u0026ldquo;Next\u0026rdquo; button once you have done so. We will leave the settings in the \u0026ldquo;System\u0026rdquo; section as is, Click on the \u0026ldquo;Next\u0026rdquo; button. We will also leave the \u0026ldquo;Disks\u0026rdquo; section as is. Since I would like to install plugins and have \u0026ldquo;IPS/IDS\u0026rdquo; data and other block lists. 32GB will be enough space for the VM. For the CPU \u0026ldquo;Type\u0026rdquo;, We will set it to \u0026ldquo;host\u0026rdquo;, this will allow OpnSense direct access to the CPUs \u0026ldquo;instruction sets\u0026rdquo; for better performance. I will also give the VM 4 cores so that there will be enough cores for when we start using things like \u0026ldquo;IPS/IDS\u0026rdquo; and VPNs. Click on the \u0026ldquo;Next\u0026rdquo; button once you have done so. For the RAM, I will give the VM 4GB for the same reason as above. I will leave on \u0026ldquo;Ballooning\u0026rdquo;, so that when the VM is not using all the RAM, it can be used elsewhere. Click on the \u0026ldquo;Next\u0026rdquo; button once you have done so. For the network section, we will add the first network to it (vmbr1). We will add the other bridges to the VM in a bit. PS I forgot to turn off the \u0026ldquo;Firewall\u0026rdquo; option. I turned it off ofter I added all the connections to the VM. Click on the \u0026ldquo;Next\u0026rdquo; button once you have done so. You can continue to click on the \u0026ldquo;finish\u0026rdquo; button to complete the VM creation. Now all that is left is to add the last three bridge connections to the VM. With the VM selected, open the \u0026ldquo;Hardware Device\u0026rdquo; section, Click on the \u0026ldquo;Add\u0026rdquo; button and select the \u0026ldquo;Network\u0026rdquo; option.\nNow like in step 9, set the Bridge to \u0026ldquo;vmbr2\u0026rdquo; and tick off the \u0026ldquo;Firewall\u0026rdquo; option, just I reminder, I forgot to turn off the \u0026ldquo;Firewall\u0026rdquo; option here but corrected that once I noticed I forgot to do it. Click on the \u0026ldquo;Add\u0026rdquo; button once you have done so. Repeat step 11 for \u0026ldquo;vmbr3\u0026rdquo; and \u0026ldquo;vmbr4\u0026rdquo; until you have all four bridges attached to the vm. Installing OpnSense Make sure that there are no Network cables plugged into the OpnSense ports. We will connect them later.\nClick on the \u0026ldquo;Start\u0026rdquo; button and then open the VM\u0026rsquo;s \u0026ldquo;Console\u0026rdquo;\nWait for the OpnSense to boot up, it took around 2 minutes to do so. When it is ready, you will be presented with a login prompt. Login using the following details: login: installer password: opnsense You will be presented with a menu where we can start the installation process.\nChoose the \u0026ldquo;Keymap\u0026rdquo; you would like to use, in my case it is the \u0026ldquo;default\u0026rdquo;. Use the \u0026ldquo;Up\u0026rdquo; and \u0026ldquo;Down\u0026rdquo; arrows to highlight your choice, then press the \u0026ldquo;Space bar\u0026rdquo; to select your option. Once selected press \u0026ldquo;Enter / Return\u0026rdquo; on your keyboard to continue to the next screen.\nNext I will choose the \u0026ldquo;Install (UFS)\u0026rdquo; option, if you would like to use \u0026ldquo;ZFS\u0026rdquo; you can.\nWe will then choose the \u0026ldquo;da0\u0026rdquo; drive which is the 32GB disk we created as the installation media to install OpnSense on. You will be presented with a confirmation prompt to create a swap partition. Accept it to continue. You will then be prompted to confirm your choices. Select \u0026ldquo;Yes\u0026rdquo; to continue. OpnSense will start to install, this can take around 4 minute plus to install. Once the installation is completed, You will be presented with a menu to change the \u0026ldquo;root\u0026rdquo; password. It is recommended to do so. When you are ready, Select the \u0026ldquo;Complete Install\u0026rdquo; option. When you select it, go into the \u0026ldquo;Hardware\u0026rdquo; section of the VM again and unmount the ISO. Well done. The VM will restart and boot again into the installed OpnSense instance. Creating the networks in OpnSense terminal Connect the WAN 1 cable into the WAN Port 1, and Connect a cable into the \u0026ldquo;Management\u0026rdquo; Network. We will use this \u0026ldquo;Management LAN\u0026rdquo; connection to connect directly to the OpnSense web UI later on. Login to OpnSense with the root user and the password you set during the installation stage. Once logged in, you will be presented with a menu where we can do the first network setup. Type \u0026ldquo;1\u0026rdquo; and press \u0026ldquo;Enter / Return\u0026rdquo; to start the \u0026ldquo;Assign Interfaces\u0026rdquo; process. Type \u0026ldquo;n\u0026rdquo; for the \u0026ldquo;LAGGs\u0026rdquo; and \u0026ldquo;VLANs\u0026rdquo; options. Next we will be asked to assign the \u0026ldquo;WAN\u0026rdquo; connection. In proxmox, we attached the first \u0026ldquo;WAN\u0026rdquo; bridge to the VM and it is called \u0026ldquo;net0\u0026rdquo;. This will be called \u0026ldquo;vtnet0\u0026rdquo; on OpenSense. So we will now type \u0026ldquo;vtnet0\u0026rdquo; and press \u0026ldquo;Enter / Return\u0026rdquo; to assign that as the WAN. You will now be asked to assign the \u0026ldquo;LAN\u0026rdquo; network. This network will become our \u0026ldquo;Management\u0026rdquo; network. So for this, type \u0026ldquo;vtnet1\u0026rdquo; and press \u0026ldquo;Enter / Return\u0026rdquo; to assign it. You will now be asked if you would like to assign another network or end the assignment process. We will press \u0026ldquo;Enter / Return\u0026rdquo; to end and complete the assignments as we will now move on to logging in to the OpnSense web UI to add and edit the networks. Now we will be able to see that the two networks are up and running. You will be presented the the current IP addresses of the new networks we have just assigned / created. In this case we are indeed connected to our first WAN connection as we where givin the IP address of \u0026ldquo;172.16.0.3\u0026rdquo; and OpnSense created a LAN connection with the range of \u0026ldquo;192.168.1.1/24\u0026rdquo;. You can now type in \u0026ldquo;0\u0026rdquo; and press \u0026ldquo;Enter / Return\u0026rdquo; to logout of the shell. Creating the last two networks in OpnSense web UI Connect the last cable We can now plug in the second WAN cable into our OpnSense VM as we are going to create that interface and network soon. Assigning the interfaces Connect your laptop / PC directly to the LAN network we just created, (the to be management network). OpnSense will give you an IP address in the range of the Lan \u0026ldquo;192.168.1.1/24\u0026rdquo;. So I was given \u0026ldquo;192.168.1.101\u0026rdquo; We can now login to the OpnSense Web UI by going to https://192.168.1.1 You can allow the security warning as OpnSense is using a self signed certificate. Once logged in, you will most probably be presented with a \u0026ldquo;Set up wizard\u0026rdquo; screen. We will not go through the wizard as we will manually continue to do the set up. So you can click on the \u0026ldquo;Dashboard\u0026rdquo; menu under the \u0026ldquo;Lobby\u0026rdquo; section. Click on the \u0026ldquo;Assignments\u0026rdquo; menu under the \u0026ldquo;Interfaces\u0026rdquo; section. Here we will assign the last two interfaces. In the device list, select \u0026ldquo;vtnet2\u0026rdquo; and in the description type in \u0026ldquo;WAN2\u0026rdquo; as this will be the second WAN interface. Click on the \u0026ldquo;Add\u0026rdquo; button when done so. Repeat this with \u0026ldquo;vtnet3\u0026rdquo; and in the description type in \u0026ldquo;TRUNK\u0026rdquo; as this will be the trunk interface. Click on the \u0026ldquo;Add\u0026rdquo; button when done so. Now click on the \u0026ldquo;Save\u0026rdquo; button to complete the assignments. Enabling the interfaces and setting IPs Now we need to enable the interfaces and set their IP types. Click on the \u0026ldquo;TRUNK\u0026rdquo; interface that we just created. Click on the \u0026ldquo;Enable\u0026rdquo; box. We will leave the rest of the interface settings as is for now. Since we will be using it as a \u0026ldquo;trunk\u0026rdquo; connection. It will not be getting an IP address as it will be used to accommodate multiple VLAN networks. Scroll down and click on the \u0026ldquo;Save\u0026rdquo; button to continue. You can Ignore the \u0026ldquo;Apply Configurations\u0026rdquo; message for now as we will do that once we have completed editing all the settings.\nClick on the \u0026ldquo;WAN2\u0026rdquo; interface and click on the \u0026ldquo;Enable\u0026rdquo; box. Set the \u0026ldquo;IPv4\u0026rdquo; type to \u0026ldquo;DHCP\u0026rdquo; and click on the \u0026ldquo;Save\u0026rdquo; button to continue. We can now click on the \u0026ldquo;Apply Configurations\u0026rdquo; button to finalise the configurations and apply them. Please take note that this can take a few minutes to apply, if you see it loading for more than two minutes, don\u0026rsquo;t panic as it does take time. If we now go back to the \u0026ldquo;Dashboard\u0026rdquo; and scroll down to the \u0026ldquo;Interfaces\u0026rdquo; widget. We will see that everything is in order, both the WAN connections are getting an IP address, and the trunk interface is active. Changing the Name, IP address and DHCP range of the management network The last step we will do on this guide is set up the management network. In the next guide we will setup the managed switch to help distribute the management network and we will setup a Wifi access point for easier connection to the lab.\nClick on the \u0026ldquo;LAN\u0026rdquo; Interface under the \u0026ldquo;Interfaces\u0026rdquo; section. Change the description from \u0026ldquo;LAN\u0026rdquo; to \u0026ldquo;Management\u0026rdquo;. Since I won\u0026rsquo;t be using IPv6, I will disable it by setting the type to \u0026ldquo;none\u0026rdquo;. Scroll down and change the IP address to \u0026ldquo;10.0.0.1\u0026rdquo;. This will be the IP address range that we will use for all our management devices and software. Click on the \u0026ldquo;Save\u0026rdquo; button to continue.\nBefore we apply the settings, we need to change the DHCP range to be in the \u0026ldquo;10.0.0.0/24\u0026rdquo; subnet.\nUnder \u0026ldquo;Services\u0026rdquo;, then \u0026ldquo;ISC DHCPv4\u0026rdquo;, click on the \u0026ldquo;Management\u0026rdquo; option.\nYou will notice that the old range is not in the same subnet as the new IP range. So we will change it now.\nPut in the IP range you would like, in this case i will use: \u0026ldquo;10.0.0.10\u0026rdquo; to \u0026ldquo;10.0.0.60\u0026rdquo; Click \u0026ldquo;Save\u0026rdquo; to finalise the DHCP changes. Note that once it is saved, the DHCP service will be stopped due to the fact that we have not \u0026ldquo;Applied\u0026rdquo; the changes to the \u0026ldquo;Management\u0026rdquo; interface yet (step 4).\nWe will do that now.\nGo back to the \u0026ldquo;Management\u0026rdquo; Interface and click on the \u0026ldquo;Apply Configurations\u0026rdquo; button to complete the setup. This will once again take a few minutes to \u0026ldquo;Apply\u0026rdquo; and take effect. Wait for about two minutes and then do the following: Now since we have changed the IP address of the interface, we need to unplug and plug the cable back into the laptop / PC to get the new IP in the 10.0.0.0/24 range.\nThis is good news as it means the Management network is completed.\nNow we can goto https://10.0.0.1 to login to the OpnSense UI again. Once logged in, scroll down to the \u0026ldquo;Interfaces\u0026rdquo; widget. We will see that everything is still in order, both the WAN connections are getting an IP address, the trunk interface is active and our \u0026ldquo;Management\u0026rdquo; network is on the new IP range. Conclusion We now officially have an OpnSense VM running and ready to be used in our Lab. In the next guide I will go through how to once again split the managed switch into more parts for us to join our management network to and then move the Proxmox instance to. We will also add a Wifi access point to the network for easier connection to our Lab.\nHave fun with your new OpnSense VM.\n","date":"2024-02-12T00:00:00Z","image":"http://localhost:1313/post/opnsense-vm-install-12-02-2024/Splash_hu1423432337553888402.jpg","permalink":"http://localhost:1313/post/opnsense-vm-install-12-02-2024/","title":"OpnSense Virtual Machine Installation on Proxmox"},{"content":" ","date":"2024-02-02T00:00:00Z","image":"http://localhost:1313/post/lab-wan-network-creation-02-02-2024/splash_hu11745763418867523556.jpg","permalink":"http://localhost:1313/post/lab-wan-network-creation-02-02-2024/","title":"LAB WAN Network Creation"},{"content":" Home Lab Network Design I wanted to share the design of the network I will be creating and using in my new home / office lab setup. I will briefly go over the requirements of what in my opinion every lab network should have and how I will achieve this with as little hardware as possible.\nThe requirements Dual WAN ports. It is very important to learn how to use and work in a multi WAN environment. Most medium to large companies will have to use a Multi WAN network, so learning how to work with them in your Lab is important.\nIt is important to have all your \u0026ldquo;Management\u0026rdquo; software and devices on its own network. This helps with security as well as keeps the network more manageable when separating specific devices to specific networks.\nThe last requirement will then be to have a \u0026ldquo;LAN Port\u0026rdquo; that we can use for what ever we need to as this series continues. For example we will most probably use this port as a \u0026ldquo;Trunk\u0026rdquo; for VLANs. We will most probably use it to create VLANs such as \u0026ldquo;IOT/Mobile, Office and Guests\u0026rdquo; which we can then connect to another Managed switch to grow the network over time.\nThe Design Please note that this will change as the network grows or as needed.\nManaged Switch The heart of my network is the \u0026ldquo;TP-Link TL-SG1024DE\u0026rdquo; managed switch. I have been using it for years and it has been an incredible switch for me. I use VLANs (802.1Q) to be able to split the switch up into the different networks.\nI use it in the following way:\nThe first 8 ports (1-8) are used from my \u0026ldquo;Home Network\u0026rdquo;. The next 8 ports (9-16) are used for my \u0026ldquo;Business Network\u0026rdquo;. The next 7 (17-23) are used for my \u0026ldquo;Lab Network\u0026rdquo;. the last port (24) is used as a trunk for my \u0026ldquo;Home, Business and home Lab\u0026rdquo;. this allows me to only need one switch for my entire network, which saves space and electricity.\nWAN connections for the Lab I have created a trunk from my \u0026ldquo;main router\u0026rdquo; that will have two VLANs (104 and 105).\nOn my main router, I created two VLAN networks that I will then use as WAN connections for our lab.\nVLAN 104, 172.16.0.0/29 VLAN 105, 172.17.0.0/29 This goes into port 24 as a \u0026ldquo;tagged\u0026rdquo; VLAN, then on port 17 and 18 they will be \u0026ldquo;untagged\u0026rdquo;. That is then connected to OpnSense as gateways.\nWe will then have two WAN networks to play with in the Lab.\nOpnSense I will be installing OpnSense on a Virtual Machine and give the Virtual Machine access to the NIC ports via \u0026ldquo;Linux bridges\u0026rdquo;.\nThis way it allows for easier and quick adding and removing ports as needed. It will also help with migration and clusters if you would like to do that. Passing (Passthrough) an entire NIC to the virtual machine is not needed and can actually be more of a pain at times to manage then just using bridges.\nConclusion Honestly there is not much more for me to explain as I think the diagram explains a lot already. I will see how it goes, but I will most probably do a Youtube Video showing the installation process and how I went about setting up the networks from beginning to end.\nHowever since it will be a very time intensive task, I will be looking into splitting it up into a series of smaller videos, but I will see how things go and take it as it comes. But I\u0026rsquo;m excited to start on this series and I hope you will enjoy it and learn a lot.\n","date":"2024-01-26T00:00:00Z","image":"http://localhost:1313/post/home-lab-network-design-26-01-2024/splash_hu9191189077232502021.jpg","permalink":"http://localhost:1313/post/home-lab-network-design-26-01-2024/","title":"Home Lab Network Design"},{"content":" What is Dell OpenManage Server Administrator In short Dell OpenManage Server Administrator (OMSA) is a tool \u0026ldquo;web browser-based graphical user interface\u0026rdquo; that allows you to manage your server without having to access the Configuration Utility in the boot screen.\nSo the server can be running and services don\u0026rsquo;t need to be disrupted to do administration work.\nSee the following link for more information:\nhttps://www.dell.com/support/kbdoc/en-za/000132087/support-for-dell-emc-openmanage-server-administrator-omsa\nWhy Install it I wanted the ability to control the PERC H700 RAID controller without having to restart the server in order to access the \u0026ldquo;RAID configuration Utility\u0026rdquo; in the boot screen.\nSo adding and removing Hard Drives can be quick and easy to do.\nInstallation In order for the Dell OpenManage Server Administrator to see and have access to the H700 RAID controller. It has to be installed directly on the host OS itself. You can install it in a \u0026ldquo;Privileged\u0026rdquo; container if you would like to. But it will not be able to access the RAID controller.\nI will once again use the \u0026ldquo;Shell\u0026rdquo; directly in the Proxmox web UI again. You can do this via ssh if you like.\nCreate a folder to store packages for installation mkdir opman cd opman Create a file called installOpenManage.sh nano installOpenManage.sh Paste in the following apt update # This is up to you if you would like to apply all updates apt upgrade # These are the extra dependencies I needed # You can see if you are successful without them apt install gnupg libcurl4 libncurses5 libxslt1-dev libgpm2 libtinfo5 # Downloads the signature Key from Dell and adds the key to the source file mkdir -p /etc/apt/keyrings keyring=/etc/apt/keyrings/linux.dell.com.gpg wget -qO - https://linux.dell.com/repo/pgp_pubkeys/0x1285491434D8786F.asc | gpg --dearmor -o $keyring chmod +r $keyring echo \u0026#34;deb [signed-by=$keyring] http://linux.dell.com/repo/community/openmanage/10300/focal focal main\u0026#34; \u0026gt; /etc/apt/sources.list.d/linux.dell.com.list # Do a repo update to get OpenManage repos apt update # This will download all the needed packages wget -c http://archive.ubuntu.com/ubuntu/pool/universe/o/openwsman/libwsman-curl-client-transport1_2.6.5-0ubuntu8_amd64.deb wget -c http://archive.ubuntu.com/ubuntu/pool/universe/o/openwsman/libwsman-client4_2.6.5-0ubuntu8_amd64.deb wget -c http://archive.ubuntu.com/ubuntu/pool/universe/o/openwsman/libwsman1_2.6.5-0ubuntu8_amd64.deb wget -c http://archive.ubuntu.com/ubuntu/pool/universe/o/openwsman/libwsman-server1_2.6.5-0ubuntu8_amd64.deb wget -c http://archive.ubuntu.com/ubuntu/pool/universe/s/sblim-sfcc/libcimcclient0_2.2.8-0ubuntu2_amd64.deb wget -c http://archive.ubuntu.com/ubuntu/pool/universe/o/openwsman/openwsman_2.6.5-0ubuntu8_amd64.deb wget -c http://archive.ubuntu.com/ubuntu/pool/multiverse/c/cim-schema/cim-schema_2.48.0-0ubuntu1_all.deb wget -c http://archive.ubuntu.com/ubuntu/pool/universe/s/sblim-sfc-common/libsfcutil0_1.0.1-0ubuntu4_amd64.deb wget -c http://archive.ubuntu.com/ubuntu/pool/multiverse/s/sblim-sfcb/sfcb_1.4.9-0ubuntu7_amd64.deb wget -c http://archive.ubuntu.com/ubuntu/pool/universe/s/sblim-cmpi-devel/libcmpicppimpl0_2.0.3-0ubuntu2_amd64.deb wget -c http://ftp.us.debian.org/debian/pool/main/o/openssl/libssl1.1_1.1.1w-0+deb11u1_amd64.deb # and install them if not already installed dpkg -i libwsman-curl-client-transport1_2.6.5-0ubuntu8_amd64.deb dpkg -i libwsman-client4_2.6.5-0ubuntu8_amd64.deb dpkg -i libwsman1_2.6.5-0ubuntu8_amd64.deb dpkg -i libwsman-server1_2.6.5-0ubuntu8_amd64.deb dpkg -i libcimcclient0_2.2.8-0ubuntu2_amd64.deb dpkg -i openwsman_2.6.5-0ubuntu8_amd64.deb dpkg -i cim-schema_2.48.0-0ubuntu1_all.deb dpkg -i libsfcutil0_1.0.1-0ubuntu4_amd64.deb dpkg -i sfcb_1.4.9-0ubuntu7_amd64.deb dpkg -i libcmpicppimpl0_2.0.3-0ubuntu2_amd64.deb dpkg -i libssl1.1_1.1.1w-0+deb11u1_amd64.deb # Now we can install OpenManage apt-get install srvadmin-all # This will start the OpenManage Services /opt/dell/srvadmin/sbin/srvadmin-services.sh start press ctrl + x to close nano, then press Y to save your changes.\nWe then need to give the file executable permissions\nchmod +x installOpenManage.sh Now we can run the script ./installOpenManage.sh Please note that you will need to answer some questions in some of the steps. For example when doing an \u0026ldquo;Upgrade\u0026rdquo;, So keep an eye out for any prompts.\nIf everything was successful, you can delete the folder cd ../ rm -r opman Side Note: I got most of the information from the following blog post on the Proxmox forum: https://forum.proxmox.com/threads/dell-openmanage-on-proxmox-6-x.57932/\nIf you need any more information or troubleshooting, You can go over the original post and see if any of the suggestions in there help you.\nAccess the Web UI To access the UI, open up your web browser and navigate to: https://your.proxmox.ip:1311\nfor example, mine is accessible at: https://10.0.0.2:1311/\nThen login using your iDRAC user.\n","date":"2024-01-12T00:00:00Z","image":"http://localhost:1313/post/dell-openanage-server-administrator-12-01-2024/splash_hu3316126544391716158.jpg","permalink":"http://localhost:1313/post/dell-openanage-server-administrator-12-01-2024/","title":"How To Install Dell OpenManage Server Administrator on Proxmox 8.1.3"},{"content":" How will we achieve this? In Proxmox, we will create a cron job that will run a script to check the current servers ambient temperature and set the fan speeds accordingly. The script will need to use two main components to achieve this:\nipmitool for Debian (Proxmox) to use use ipmi protocols in the cli. A iDRAC user account that the script will use to access the iDRAC. Dells iDRAC (iDRAC 6 on the Dell R710) to get the servers ambient temperature and to set the fan speeds. Just as a side note, I have created a \u0026ldquo;Management\u0026rdquo; (10.0.0.0/24) network were things such as the iDRAC and other other management related software / devices are connected to. Having a separate and tightly locked down network where all the IT infrastructure is managed is very important.\nI will do a write up on my network design in a future post, but for now I wanted to get this post out to help people silence their server and also help save some electricity in the process.\nSet your iDRAC LAN Settings and main admin user In order for us to access the iDRAC web portal, we will need to give the iDRAC NIC an IP address and create the main \u0026ldquo;Admin\u0026rdquo; user we can use to login and administrate the server.\nmake sure to have your iDRAC NIC connected to your desired network To get to the iDRAC bios / settings Turn on your server and press the \u0026ldquo;CTRL + E\u0026rdquo; key on your keyboard when you see the following message: \u0026#34;Press CTRL + E for Remote Access Setup within 5 sec\u0026#34; Make sure the that the iDRAC6 LAN and IPMI Over LAN options are set to on Next goto the LAN Parameters section, navigate down until you get to the IPv4 Settings section and fill in your desired IP details. Lastly, go to the LAN User Configuration to create the main user you will use to access iDRAC and administrate your server. Make sure to set the IPMI LAN Privilege to Admin, set the Account Access to Enabled and set the user name and password you would like to use. press ESC to exit and save your changes. Create a new iDRAC user for our script We don\u0026rsquo;t want to use our main Administrator account for this as having those details in plain text in a script is very dangerous. We will instead create a new user that we will give permissions to use the IPMI.\nLogin to your iDRAC web portal entering your iDRAC IP address in your browser, mine is as follows: https://10.0.0.4/login.html Login using the user details that you created in the previous section.\nOnce logged in. In the menu on the left side. Open the iDRAC Settings section\nNow open the Network/Security sub menu. Now select the users section click on a free “User ID” number. Select the “Configure User” radio button, and click “Next”. Set the following settings:\nThe Enable User check box should be ticked. Enter a username. Enter a password. A max of twenty alpha-numeric password is needed. Set Maximum LAN User Privilege Granted to Administrator. The Enable Serial Over LAN check box should be ticked. Everything else should be default, which will effectively be no permissions.\nScroll to the bottom of the page and click “Apply” to create the new user. IPMI Encryption Under the Network section of the iDRAC Settings. You are able to set a 40 character hex value that will be used for encrypting your connections. For this guide I will leave it all as \u0026ldquo;0\u0026rdquo;.\nInstall IPMI Tools on Proxmox I will now login to my host operating system (Proxmox) in my case. I will login to the Proxmox web interface and use the built in shell / terminal. You can use SSH if you prefer that.\nDo a repository update and then install ipmitools using the following:\nsudo apt update \u0026amp;\u0026amp; sudo apt install ipmitool if you are already a root user you can just run the following command:\napt update \u0026amp;\u0026amp; apt install ipmitool We can test if it is working by running the following command: ipmitool -I lanplus -H \u0026lt;ip\u0026gt; -U \u0026lt;user\u0026gt; -P \u0026lt;pass\u0026gt; -y \u0026lt;enc\u0026gt; sdr type temperature Make sure to replace the following with your details: = your iDRAC IP = the user you created in the previous section = the users password = your encryption string\nSo in my case it will be as follows:\nipmitool -I lanplus -H 10.0.0.4 -U fan-admin -P asd123asd -y 0000000000000000000000000000000000000000 sdr type temperature If everything is correct, you will get a table with some temperature values.\nThe script I will create a new folder in the root users home folder where I will store the script.\nmkdir fancontrol I will then use nano to create a file called setspeed.sh\nnano setspeed.sh The below script is a modified version of the script found here https://github.com/NoLooseEnds/Scripts/tree/master/R710-IPMI-TEMP\nThe original script was split into two files which I found was unnecessary and got confusing to edit. So I merged them into one file to be easier to maintain. I also added a FANSPEED variable to make it easier to set the fan speed by utilisation percentage as the original script did not have that function.\nCopy and paste the below script into nano #!/bin/bash # IPMI IP address IPMIHOST=10.0.0.4 # IPMI Username IPMIUSER=fan-admin # IPMI Password IPMIPW=y0urPassw0rd # Your IPMI Encryption Key IPMIEK=0000000000000000000000000000000000000000 # Fan Speed / utilisation in percentage, for example 9 for 9% utilisation # Please note that each fan can have a different rpm and will not all be the same speed FANSPEED=9 # TEMPERATURE # Change this to the temperature in Celsius you are comfortable with. # If the temperature goes above the set degrees it will send raw IPMI command to enable dynamic fan control MAXTEMP=27 # This variable sends a IPMI command to get the temperature, and outputs it as two digits. # Do not edit unless you know what you do. # Side note, if you are running ipmitool on the system you are controlling, you don\u0026#39;t need to specify -H,-U,-P - from the OS installed on the host, ipmitool is assumed permitted. You only need host/user/pass for remote access. TEMP=$(ipmitool -I lanplus -H $IPMIHOST -U $IPMIUSER -P $IPMIPW -y $IPMIEK sdr type temperature |grep Ambient |grep degrees |grep -Po \u0026#39;\\d{2}\u0026#39; | tail -1) # Dont edit this, this converts decimal to hex SPEEDHEX=$( printf \u0026#34;%x\u0026#34; $FANSPEED ) if [[ $TEMP \u0026gt; $MAXTEMP ]]; then printf \u0026#34;Warning: Temperature is too high! Activating dynamic fan control! ($TEMP C)\u0026#34; | systemd-cat -t R710-IPMI-TEMP echo \u0026#34;Warning: Temperature is too high! Activating dynamic fan control! ($TEMP C)\u0026#34; # This sets the fans to auto mode, so the motherboard will set it to a speed that it will need do cool the server down ipmitool -I lanplus -H $IPMIHOST -U $IPMIUSER -P $IPMIPW -y $IPMIEK raw 0x30 0x30 0x01 0x01 else printf \u0026#34;Temperature is OK ($TEMP C)\u0026#34; | systemd-cat -t R710-IPMI-TEMP printf \u0026#34;Activating manual fan speeds! (1560 RPM)\u0026#34; # This sets the fans to manual mode ipmitool -I lanplus -H $IPMIHOST -U $IPMIUSER -P $IPMIPW -y $IPMIEK raw 0x30 0x30 0x01 0x00 # This is where we set the slower, quiet speed ipmitool -I lanplus -H $IPMIHOST -U $IPMIUSER -P $IPMIPW -y $IPMIEK raw 0x30 0x30 0x02 0xff 0x$SPEEDHEX fi press ctrl + x to close nano, then press Y to save your changes.\nWe then need to give the file executable permissions\nchmod +x setspeed.sh You can test your script to make sure it is working, set a speed in the script and run it. ./setspeed.sh In your iDRAC web portal, under the fans section, you can see the current rpm of each fan.\nSo at 9 percent speed my fans run at around 2040 rpm.\nAnd at 50 percent speed my fans run at around 7320 rpm.\nCreate a cron job Next we need to create a cron job that Proxmox will run on startup and every minute (in this case) you can change how often the job runs. That is up to you.\nOpen crontab crontab -e Add the following line to the end of the file */1 * * * * /bin/bash /root/fancontrol/setspeed.sh \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 You can then exit and save the file. Then in Proxmox, if we look at the syslog, we will see that in a minutes time, the cron job will execute. Conclusion You will now have a script that will run every minute, check on the servers ambient temperature and then set the fan speeds accordingly.\n","date":"2024-01-05T00:00:00Z","image":"http://localhost:1313/post/dell-r710-how-to-quiet-the-fans/splash_hu14272155804128857082.jpg","permalink":"http://localhost:1313/post/dell-r710-how-to-quiet-the-fans/","title":"How To Make Your Dell R710 Quiet using Proxmox"},{"content":" PERC H700 RAID controller The Dell R710 that I recently purchased came with a PERC H700 RAID controller. In this guide I want to go over how to access the controllers BIOS Configuration Utility to add HDDs / SSD\u0026rsquo;s to it.\nAdd your hard drives to the server I had four extremely old Seagate 500 GB Barracuda Sata hard drives laying around, I will only be using those to demonstrate how to add drives to the server.\nHow to access the controllers bios To access the controllers BIOS Configuration Utility. Turn on your Dell R710 and wait until you see the message to press the: Ctrl + R Keys\nPress the Ctrl + R Keys to open the Utility.\nRAID type to use I would recommend that you read the user guide provided by Dell. From page 17 they go over the different RAID types and terminology. For this guide I\u0026rsquo;m going to use two drives individually, so RAID 0 and then the last two drives I will create a RAID 1 group.\nhttps://dl.dell.com/manuals/all-products/esuprt_ser_stor_net/esuprt_dell_adapters/poweredge-rc-h700_user's%20guide_en-us.pdf\nFor a quick references, below is a paragraph from the above manual about the different RAID types:\nRAID Description RAID is a group of independent physical disks that provides high performance by increasing the number of disks used for saving and accessing data. A RAID disk subsystem offers the following benefits: • Improves I/O performance and data availability. • Improves data throughput because several disks are accessed simultaneously. The physical disk group appears either as a single storage unit or multiple logical units to the host system. • Improves data storage availability and fault tolerance. Data loss caused by a physical disk failure can be recovered by rebuilding missing data from the remaining physical disks containing data or parity. CAUTION: In the event of a physical disk failure, a RAID 0 virtual disk fails, resulting in data loss. Summary of RAID Levels • RAID 0 uses disk striping to provide high data throughput, especially for large files in an environment that requires no data redundancy. • RAID 1 uses disk mirroring so that data written to one physical disk is simultaneously written to another physical disk. RAID 1 is good for small databases or other applications that require small capacity and complete data redundancy. • RAID 5 uses disk striping and parity data across all physical disks (distributed parity) to provide high data throughput and data redundancy, especially for small random access. • RAID 6 is an extension of RAID 5 and uses an additional parity block. RAID 6 uses block-level striping with two parity blocks distributed across all member disks. RAID 6 provides protection against double disk failures, and failures while a single disk is rebuilding. If you are using only one array, deploying RAID 6 is more effective than deploying a hot spare disk. • RAID 10 is a combination of RAID 0 and RAID 1, uses disk striping across mirrored disks. It provides high data throughput and complete data redundancy. RAID 10 can support up to eight spans, and up to 32 physical disks per span. • RAID 50 is a combination of RAID 0 and RAID 5 where a RAID 0 array is striped across RAID 5 elements. RAID 50 requires at least six disks. • RAID 60 is a combination of RAID 0 and RAID 6 where a RAID 0 array is striped across RAID 6 elements. RAID 60 requires at least eight disks How to add HDDs Once the Configuration Utility is open, you will see a list of all your new HDDs at the bottom of the list under the \u0026ldquo;Unconfigured Physical Disks\u0026rdquo; section. So for exammple we can see that all four of our 500GB HDDs are showing up. If we only saw three for example, we could take a look at the caddy\u0026rsquo;s LED lights and find the one where the LED is not on. From there we could double check that the HDD is inserted correctly or troubleshoot further.\nUse the UP or DOWN arrows on your keyboard to highlight the Top most item \u0026ldquo;PERC H700 Integrated (Bus 0x03, Dev 0x00)\u0026rdquo; in the list. Press the F2 key to open the \u0026ldquo;Operations\u0026rdquo; menu. Highlight the \u0026ldquo;Create New VD\u0026rdquo; (VD stands for Virtual Disk) and press the Enter / Return keyboard button to open the \u0026ldquo;Virtual Disk Management\u0026rdquo; Menu. Please note that you can use the UP or DOWN arrows on your keyboard to navigate the menu.\nRAID type Highlight the \u0026ldquo;RAID Level\u0026rdquo; input. When you have it highlighted, press the Enter / Return keyboard button to select the RAID Level you would like. In this case, I want to create a single RAID 0 drive. So I will only select the \u0026ldquo;RAID-0\u0026rdquo; option. Please note that You will only be presented with the available options depending on the amount of free drives you have.\nIn the screenshot below, I only have two HDDs available, so the max RAID Level I can create is RAID-1. Use the DOWN arrow on your keyboard to highlight the HDD you would like to add the the \u0026ldquo;Disk Group\u0026rdquo;. When you have the HDD highlighted, press the Space keyboard button to select the HDD to be part of the \u0026ldquo;Disk Group\u0026rdquo;. I this case, I want to create a single RAID 0 drive. So I will only select the first disk. If for example you would like to create a RAID 1 disk group. Select two HDDs you would like to use. Using the DOWN arrow on your keyboard continue to press DOWN until you are on the \u0026ldquo;VM Name\u0026rdquo; input and type in the name you would like to call your Disk Group. Using the DOWN arrow on your keyboard continue to press DOWN until you are on the \u0026ldquo;OK\u0026rdquo; button and then press the Enter / Return button to finalise your creation. How to initialise the new disk groups. Highlight the HDDs in your new Disk Group and press the F2 button to open the \u0026quot; Operations Menu \u0026quot; again. Press Enter / Return on the \u0026ldquo;Initialization\u0026rdquo; option, then press Enter / Return on the \u0026ldquo;init. Start\u0026rdquo; option. This will start initializing the drives to be used in your OS. Press Enter / Return to accept that any data on the disks will be deleted. Continue to do that for all your new Virtual Disks.\nConclusion Hopefully this quick guide helps you on your path of adding new drives to your PERC H700 RAID Controller. I recommend that you read and study the different RAID Levels / Types in order to know which type will be the best for your use cases.\n","date":"2023-12-26T00:00:00Z","image":"http://localhost:1313/post/h700-how-to-add-hdd-22-12-2023/splash_hu5660402524618512282.jpg","permalink":"http://localhost:1313/post/h700-how-to-add-hdd-22-12-2023/","title":"How To Add Drives To The Dell PERC H700 RAID Controller"},{"content":" You have a new secondhand server, what now? The fist thing you need to do when buying an old server is to make sure you clear, reset any passwords (eg IDrac Password), update the bios and firmware to the latest available version.\nReset iDrac and change the user passwords We will first go into the \u0026ldquo;Remote Access Setup\u0026rdquo; and reset the iDrac settings and users. You don\u0026rsquo;t want unwanted access to your server so rather do it from the get go and have the peace of mind that you have secured iDrac with your own user details.\nTurn on your server and press the \u0026ldquo;CTRL + E\u0026rdquo; key on your keyboard when you see a \u0026#34;Press CTRL + E for Remote Access Setup within 5 sec\u0026#34; message on the screen.\nSelect the \u0026quot;Reset To Default\u0026quot; option\nSelect the LAN User Configuration option a dialog will open for you to change the \u0026ldquo;Account User Name\u0026rdquo; and \u0026ldquo;Password\u0026rdquo;.\nSelect the Network Settings and set a static IP that you will be able to access on your network so that you can use iDrac later. In my case it will be \u0026ldquo;10.0.0.4\u0026rdquo;\nPress the \u0026ldquo;Esc\u0026rdquo; button on your keyboard and then chooses the \u0026ldquo;Save Changes and Exit\u0026rdquo; option.\nYou have now successfully cleared the iDrac Settings and created your new user.\nWhere to get the firmware and drivers Dells website has all the files you will need to download and install to get your server up to date.\nhttps://www.dell.com/support/home/en-au/product-support/product/poweredge-r710/drivers\nHowever having to install each file one by one will be a very tedious process and will be very time consuming.\nDell has a utility called the \u0026ldquo;System update utility\u0026rdquo; (SUU) where you can create a bootable ISO image with all the latest firmware on it that you can boot into, it will see what firmware you need and install them.\nDue to the R710 being end-of-life it is difficult to find and get an easy to use SSU iso with all the latest updates on it. After a lot of searching I found a wonderful forum where the author (Allen Sampsell) hosts a next cloud instance where you can download a 2019 version that has most of the up to date drivers and firmware.\nhttps://forum.allenscloud.com/t/dell-r710-firmware/14\nEdited: 08-06-2024\nPS. just as an update. I do see that forum.allenscloud.com is not online anymore which is a shame. I have however uploaded the ISO to https://archive.org/details/r-710-bootable So hopefully that helps you.\nCreating a bootable USB from the ISO I was only able to create a bootable USB when using \u0026ldquo;Rufus\u0026rdquo; https://rufus.ie/ other software such as Etcher was not working as it was not creating the boot partition correctly. Rufus was as simple as selecting the ISO, choosing my USB and clicking the \u0026ldquo;Start\u0026rdquo; button.\nBooting from the USB Insert your usb into your server, I have my keyboard and mouse plugged into the front USB ports and have plugged the USB into the back USB port. Turn on your server and keep pressing the \u0026ldquo;F11\u0026rdquo; key on your keyboard when you see the Dell logo appear. This will eventually open the \u0026ldquo;UEFI Boot Menu\u0026rdquo;. This will also work in legacy / Bios boot mode. Choose your USB device and your server should boot up using that. Once it has booted, it will automatically start the update process. Please note that depending on how many updates it needs to do, this can take a very long time (30 minutes +) Installing any new firmware updates from a linux host OS. A few weeks later I noticed that the \u0026ldquo;Lifecycle Controller\u0026rdquo; on my server was not updated to the latest available version. So the quickest way for me to install it was to download the file frow Dell\u0026rsquo;s support page and install it through the host OS that I have installed.\nSince I have Proxmox installed as the main host OS, I downloaded the \u0026ldquo;.BIN\u0026rdquo; file. In this case it was the \u0026ldquo;Lifecycle-Controller_Legacy_Application_0WFGM_LN_1.7.5.4_A00.BIN\u0026rdquo; file. Using your favourite terminal software, use the \u0026ldquo;SCP\u0026rdquo; command to upload the \u0026ldquo;.BIN\u0026rdquo; file to proxmox. (10.0.0.2 is the IP address of my server) scp /Users/jono/Downloads/Lifecycle-Controller_Legacy_Application_0WFGM_LN_1.7.5.4_A00.BIN root@10.0.0.2:/root This will copy the file to the root folder on proxmox.\nNext, ssh into the proxmox server ssh root@10.0.0.2 We then need to set the file as executable with the following command: chmod a+x Lifecycle-Controller_Legacy_Application_0WFGM_LN_1.7.5.4_A00.BIN Now run it with: ./Lifecycle-Controller_Legacy_Application_0WFGM_LN_1.7.5.4_A00.BIN Press \u0026ldquo;Y\u0026rdquo;. It will install the update if it is compatible with your server, if not it will let you know. This can take a very long time (10 minutes +) Conclusion If everything went smoothly, you will have an up to date sever, well at least to the latest updates that is available for your server. Since the Dell R710 is end of life, you will not get many new updates. I tried to install a few of the new \u0026ldquo;SAS and Storage\u0026rdquo; firmware and drivers updates they have available. However I would always get a \u0026ldquo;This Update Package is not compatible with your system configuration\u0026rdquo; message. I was in particular, trying to install the new \u0026ldquo;Samsung\u0026rdquo; SSD firmware updates to try get my \u0026ldquo;Samsung 870\u0026rdquo; to hopefully be seen as a compatible device, but was unsuccessful.\nPlease note that the \u0026ldquo;Samsung 870\u0026rdquo; works perfectly so far, I just get a \u0026ldquo;compatibility error\u0026rdquo; all the time on the LCD screen and on iDrac which can be very annoying for me.\n","date":"2023-12-11T00:00:00Z","image":"http://localhost:1313/post/update_dell-r710-11-12-2023/splash_hu16887780700181094062.jpg","permalink":"http://localhost:1313/post/update_dell-r710-11-12-2023/","title":"Updating a Dell PowerEdge R710"},{"content":" My Current Setup For many years I have been using two HPE ProLiant MicroServer Gen 8\u0026rsquo;s which are still running great till this day. I upgraded them with Xeon E3-1260L (4 cores, 8 threads) which is an energy efficient and powerful cpu. The only issue I have with the ProLiant is that the max supported RAM is 16GB on the motherboard itself.\nAs technologies have matured and become more and more complex. 16GB of RAM is just not enough to run all the software that I need to run either on a daily bases or when I need to run multiple virtual machines to test new software and configurations. I decided to look into getting something more powerful and has more features for my work and home lab purposes. I will continue to use my ProLiant MicroServers for running my home network and services.\nI noticed that there are a lot of Dell R710\u0026rsquo;s floating around on the second hand market. It is the time were all companies are getting rid of all their old servers and moving to newer technologies.\nThe price was great, the specs are fantastic, but is it still a good idea to use very old technologies for a testing and home lab server?\nPlease note that I\u0026rsquo;m not a master of hardware, I have a fair amount of experience using different hardware but I\u0026rsquo;m far from a hardware guru. If you need advice from experts, I would recommend visiting the Level 1 Techs forums https://forum.level1techs.com/\nSecond Hand Dell R710 is it worth it? The R710 server that I was looking at has two Xeon X5650\u0026rsquo;s, 64 GB RAM, 8x Gigabit ports (2x 4 port gigabit cards), 2x 870 watt PSU\u0026rsquo;s and a H700 RAID Controller which unfortunately does not support passthrough. I didn\u0026rsquo;t do my research on the H700 before hand as I assumed that it would support passthrough as I\u0026rsquo;m so used to RAID controllers usually supporting that. In the end it is not too much of an issue for me, but it was a wake up call with regards to reminding me to always research every thing thoroughly first.\nThe unit did not include any HDD caddies, so I had to get 6x caddies as well.\nA X5650 has 6 cores 12 threads at a base frequency of 2.66 GHz and boosts to 3.06 GHz. The TDP is 95 W and can take up to 288 GB of DDR3 800/1066/1333 ecc RAM. It also support all the virtualization technologies (VT-x and VT-d) if needed, although I was also having issues with hardware passthrough.\nThe cost of the Dell R710 was R3000 (ZAR) The cost of a HDD caddy was R175 each, I needed 6 (R1050 total) Shipping was R30\nTotal cost is R4080\nReally good deal in my opinion.\nWhat I looked for to see if it was worth purchasing? Power draw and efficiency Take these numbers with a grain of salt due to silicon lottery. However this is the approach I took when deciding if the Dell R710 will be a good purchase.\nBrowsing through the web and scouring forums, I could make out that a X5650 idles at around 45 - 55 Watts. So a total of around 110 Watts for the pair.\nMy ProLiant with the Xeon E3-1260L idles at around 35 - 45 Watts. Which would bring the idle power usage around 10 Watts per CPU more then what I currently use. For me that is not too bad to have two more cores and 4 more threads available.\nHowever, when doing heavy work loads, the power draw doubles from 45 Watts of the E3-1260L to 95 Watts of the X5650. So defiantly a lot more power usage for the extra two cores and 4 threads at full load.\nI wanted to compare this to a modern 12 core 24 thread CPU to have a rough idea of what a more modern CPU would draw.\nAn AMD 100-100000061WOF Ryzen 9 5900X 12 Core 3.7GHz has a TDP of 105 Watts\nAn Intel BX8071512700F Core i7-12700F 12 Core 3.6GHz has a TDP of 95 Watts - 180 Watts maximum at load.\nThey are all in a similar TDP range with regards to Watts per core and it is very clear that as technology improved, the modern CPU\u0026rsquo;s will be more efficient and more powerful. But with regards to the workload I will be putting on the cpu, I won\u0026rsquo;t be very disadvantaged with the frequency of the cpu. The 2.66 GHz to 3.06 GHz of the X5650 will be fine for my test and home lab needs.\nIt is also very important to know that depending on your workload, running two CPU\u0026rsquo;s together can run slower than a single CPU with the combined cores. But I was interested in redundancy and having more RAM channels, using a dual socket motherboard will facilitate this.\nSound Pollution Unfortunately server hardware is loud, sever fans can be extremely noise polluting, especially in a residential area. But with some tweaking, we will be able to almost make the server completely silent. I will create an article in the near future with how to achieve this.\nCosts The Second hand Dell R710 totals up to: R4080\nAn AMD 100-100000061WOF Ryzen 9 5900X CPU only: R6999 (At the time of writing this)\nAn Intel BX8071512700F Core i7-12700F: R8099 (At the time of writing this)\nTo build a new complete server would by far cost more than purchasing an old fully configured server. With this already in mind, the Dell will be a good purchase.\nTo help take another approach to see if it would be worth it and cost effective, I did a quick calculation to see what it would cost daily in electricity if i did decide to run the Dell 24/7 at full load.\nFor the purpose of this calculation, I will set the Dells full load to be 200 Watts. The cost per Kilowatt Hours at the time of writing this is: R2.73 (ZAR)\ncost = power rating × time × price power rating = 200 W (We need to convert it to kWh) kilowatt hours = (watts × hours) ÷ 1000 = (200 x 1) ÷ 1000 = 0.2 KW cost per day = 0.2 x 24 x 2.73 = R13.10 cost per month = 13.10 x 30 = R393 cost per year = 13.10 x 365 = R4781.50 To put this in perspective, at the time of writing this, using Uber eats, a McDonalds McFeast® Meal costs R149.90. It costs less then three McFeast® Meals to run the Dell at full load for a month.\nAnother way to look at it is that I can purchase the Dell and use it 24/7 for a year and that will be close to the cost of only buying a new CPU. Then if we take the cost of a motherboard for that CPU, which is around another R4000. We can run the Dell 24/7 for two years at the same price.\nIn my situation, going the Dell route is the better option than building a more modern server. I don\u0026rsquo;t plan on running the server 24/7 as well, so it will defiantly be cheaper to run a second hand Dell R710.\nConclusion So of course I purchased the unit. It is now sitting comfortably in my server rack.\nI decided it would be nice to share my experience and processes that I went through to set up and use the Dell.\nI will be doing a mini series of articles about it and hopefully it will help some people along the way to setting up their own R710 server.\nBelow is the wattage use when the server starts up (Between 163 Watts - 175 Watts) and then at idle (Between 119 Watts - 123 Watts). This is the idle draw using Proxmox as the host OS, with an OpnSense Virtual Machine and an Ubuntu Virtual Machine running a few docker containers. I only have one PSU plugged in and have the fans tweaked to run slower. Very Nice.\nStartup Wattage Idle Wattage ","date":"2023-12-06T00:00:00Z","image":"http://localhost:1313/post/old-server-new-home-lab-05-12-2023/splash_hu12276212201483553999.jpg","permalink":"http://localhost:1313/post/old-server-new-home-lab-05-12-2023/","title":"Old Server New Home Lab"},{"content":"Learning Hugo I wanted to learn how to use the Hugo framework. The purpose of this guide, is to document my thought process and have a step by step guide to help me with future Hugo theme creations. If you have ever had to maintain a \u0026ldquo;dynamic\u0026rdquo; web application that is accessible by the public. You will know what security nightmare it becomes and the amount of time it takes to maintain it. Frameworks such as Wordpress has haunted me for years as it is like a flame that attracts endless moths of malicious actors having a field day constantly probing and prodding your the site and server. I have always preferred to have \u0026ldquo;Static\u0026rdquo; based websites, and seeing the power of frameworks such as Hugo and Jekyll. It is about time I jump in and learn how to use them.\nI usually just develop my sites from scratch, but being able to have a \u0026ldquo;blog\u0026rdquo; like function where I can keep my focus on creating articles and content in general and have Hugo generate the pages for me, saving me time and having almost no stress in worrying plugin security all the time.\nPurpose of this guide. I will only be going thought learning how the layouts and basic content of a Hugo theme works. This guide will not be an html tutorial. I just wanted to see how to quickly get a basic theme started and will not be worrying about how the final design will look or even add and \u0026ldquo;responsive\u0026rdquo; development yet. I want to first understand the structure of a theme and how Hugo deals with the \u0026ldquo;content\u0026rdquo; of the site.\nI will go into more depth in future guides and eventually end up using the theme I make as my main theme for this website. However for now I will be using the beautiful - Stack https://github.com/CaiJimmy/hugo-theme-stack theme for this site but will move to my own theme once I am comfortable with my own theme.\nInstallation and Initialisation Install Hugo https://gohugo.io/getting-started/quick-start/\nCreate a folder on where you would like to create your project.\nUsing your favourite terminal cd into that folder.\nInitialise a new site with the following command\nhugo new site hugo cd hugo git init We will now create a blank theme to start with:\nhugo new theme themeName change themeName to what you would like to call your theme. In my case it will be called jonomoss\nOpen the project with your favourite IDE:\nWe now need to tell Hugo to use this theme to render the pages:\nedit the top most hugo.toml file with the following and remove all the other lines: theme = \u0026#34;themeName\u0026#34; Your hugo.toml file will look like this: theme = \u0026#34;jonomoss\u0026#34; run it:\nhugo server -D You can now goto http://localhost:1313/ in your favourite browser and you will see a barebones website.\nA Quick Overview of The Theme Structure We will be focusing on the folders in the theme folder from now on. In my case it is the following folder: hugo/themes/jonomoss/\nThe layouts/ folder contains all the common html files that will be the main layout of all generated pages. Think of this as the main building blocks of your site.\nThe layouts/partials/ have all the modular parts of a website. So for example it has the footer, header, menu and other components to use in giving your pages structure.\nThe layouts/_default/ are the main \u0026ldquo;Wrapper / Containers\u0026rdquo; that will tie the desired components from the layouts/partials/ eg footer, header, menu to build the desired full page for the sites content to be displayed on. For example if we want to display a single page or the home page.\nThe assets/ folder is where all the assets needed for the theme will be stored. This is the css, js, images etc.\nThe static/ folder is where all the public files that will be copied to the public directory eg .htaccess, favicon.ico, robots.txt will be stored.\nThis is just a quick overview of the main folders that we will use and work on to create our own theme. For a full explanation of the entire folder and file structure, see https://gohugo.io/getting-started/directory-structure/\nDesign For the purpose of this guide, we will create a very basic three column website. The Header will be a fixed column on the left The content will be in the middle. the last column will have a search bar, tags and categories. I find that to be a good structure for blog style websites\nI won\u0026rsquo;t go too deep into the html code as this is not a guide on html development, but rather an overview of where to put the pieces of code to create a theme. Development We will start by setting some global styles in the stylesheet. Hugo does support scss but personally I prefer to stick with plain css. Open the main.css file in the assets/css folder. These are the basic global styles we will use for this example. :root { --bg-color: #f5f5fa; --main-text-colour: #333333; --global-font: \u0026#39;Franklin Gothic Medium\u0026#39;, \u0026#39;Arial Narrow\u0026#39;, Arial, sans-serif; --content-max-width: 1200px; } /* Global Styles and Layout*/ html, body { margin: 0; padding: 0; width: 100%; height: 100%; font-family: var(--global-font); } body { background-color: var(--bg-color); } #container { display: flex; flex-direction: row; margin: auto; max-width: var(--content-max-width); height: 100%; } a { text-decoration: none; } header { width: 260px; display: flex; flex-direction: column; margin: 0 20px; } aside { width: 300px; } footer { width: 100%; } You will end up with a basic three column site. We will now wrap the site in the #content id that we created in the css file to help limit the size of our content on wide screens. Open the _default/baseof.html file and we will wrap all our content in a new div giving it the #content id.\nI would like to also move the footer into the header and create a new aside that will hold our tag and category section.\nthe baseof.html will look like this\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;{{ or site.Language.LanguageCode site.Language.Lang }}\u0026#34; dir=\u0026#34;{{ or site.Language.LanguageDirection `ltr` }}\u0026#34;\u0026gt; \u0026lt;head\u0026gt; {{ partial \u0026#34;head.html\u0026#34; . }} \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;header\u0026gt; {{ partial \u0026#34;header.html\u0026#34; . }} \u0026lt;footer\u0026gt; {{ partial \u0026#34;footer.html\u0026#34; . }} \u0026lt;/footer\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;main\u0026gt; {{ block \u0026#34;main\u0026#34; . }}{{ end }} \u0026lt;/main\u0026gt; \u0026lt;aside\u0026gt; tags and categories will go here. \u0026lt;/aside\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Header Now we will work on the header. The idea will be to have a logo at the top, the site description, the navigation under that and lastly icon links to external sites and copyright (footer) at the bottom. It will be a five row layout with the navigation filling most of the space. Logo and Description add a logo.png file in the static folder.\nin the themes hugu.toml file add the following parameter\n[params] description = \u0026#39;This is a cool Site yay\u0026#39; Open the partials/header.html file and edit it to look as follows: \u0026lt;div id=\u0026#34;logo\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;index.html\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;{{ .Site.BaseURL | relLangURL }}logo.png\u0026#34; alt=\u0026#34;logo\u0026#34; \u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;description\u0026#34;\u0026gt; \u0026lt;p\u0026gt;{{ .Site.Params.description }}\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; {{ partial \u0026#34;menu.html\u0026#34; (dict \u0026#34;menuID\u0026#34; \u0026#34;main\u0026#34; \u0026#34;page\u0026#34; .) }} \u0026lt;div id=\u0026#34;ex-icons\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ .Site.Params.github }}\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;{{ .Site.BaseURL | relLangURL }}github-logo.svg\u0026#34; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ .Site.Params.patreon }}\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;{{ .Site.BaseURL | relLangURL }}patreon-logo.svg\u0026#34; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; Now we need to add the following styles to the main.css file. /* Header */ #logo { width: 100%; margin: 50px auto; } #logo img { margin: auto; } header #description p { font-size: 18px; color: var(--body-text-color); font-weight: lighter; } nav { flex-grow: 1; } Navigation Next We will work on the navigation. I want to add icon images to each main menu category. To do so we can use the pre parameter in the [[menus.main]] sections in the themes hugo.toml file. Add the following parameters to each menu entry [[menus.main]] name = \u0026#39;Home\u0026#39; pre = \u0026#39;\u0026lt;div class=\u0026#34;icon home-icon\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\u0026#39; pageRef = \u0026#39;/\u0026#39; weight = 10 [[menus.main]] name = \u0026#39;Posts\u0026#39; pre = \u0026#39;\u0026lt;div class=\u0026#34;icon posts-icon\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\u0026#39; pageRef = \u0026#39;/posts\u0026#39; weight = 20 [[menus.main]] name = \u0026#39;Tags\u0026#39; pre = \u0026#39;\u0026lt;div class=\u0026#34;icon tags-icon\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\u0026#39; pageRef = \u0026#39;/tags\u0026#39; weight = 30 Here is a quick explanation of what each parameter means: name: will be the title of menu pre: is html code that will be rendered with each menu item pageRef: is the path to the page when the link is clicked weight: is the position / order that the menu will be rendered in.\nOpen the partials/menu.html file and add the following {{ .Pre }} just before the {{ $name }}. Your final file will look like this: {{- /* Renders a menu for the given menu ID. @context {page} page The current page. @context {string} menuID The menu ID. @example: {{ partial \u0026#34;menu.html\u0026#34; (dict \u0026#34;menuID\u0026#34; \u0026#34;main\u0026#34; \u0026#34;page\u0026#34; .) }} */}} {{- $page := .page }} {{- $menuID := .menuID }} {{- with index site.Menus $menuID }} \u0026lt;nav\u0026gt; \u0026lt;ul\u0026gt; {{- partial \u0026#34;inline/menu/walk.html\u0026#34; (dict \u0026#34;page\u0026#34; $page \u0026#34;menuEntries\u0026#34; .) }} \u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt; {{- end }} {{- define \u0026#34;partials/inline/menu/walk.html\u0026#34; }} {{- $page := .page }} {{- range .menuEntries }} {{- $attrs := dict \u0026#34;href\u0026#34; .URL }} {{- if $page.IsMenuCurrent .Menu . }} {{- $attrs = merge $attrs (dict \u0026#34;class\u0026#34; \u0026#34;active\u0026#34; \u0026#34;aria-current\u0026#34; \u0026#34;page\u0026#34;) }} {{- else if $page.HasMenuCurrent .Menu .}} {{- $attrs = merge $attrs (dict \u0026#34;class\u0026#34; \u0026#34;ancestor\u0026#34; \u0026#34;aria-current\u0026#34; \u0026#34;true\u0026#34;) }} {{- end }} {{- $name := .Name }} {{- with .Identifier }} {{- with T . }} {{- $name = . }} {{- end }} {{- end }} \u0026lt;li\u0026gt; \u0026lt;a {{- range $k, $v := $attrs }} {{- with $v }} {{- printf \u0026#34; %s=%q\u0026#34; $k $v | safeHTMLAttr }} {{- end }} {{- end -}} \u0026gt; {{ .Pre }} {{ $name }} \u0026lt;/a\u0026gt; {{- with .Children }} \u0026lt;ul\u0026gt; {{- partial \u0026#34;inline/menu/walk.html\u0026#34; (dict \u0026#34;page\u0026#34; $page \u0026#34;menuEntries\u0026#34; .) }} \u0026lt;/ul\u0026gt; {{- end }} \u0026lt;/li\u0026gt; {{- end }} {{- end }} Add the navigation icon files in the static folder.\nNow we need to add the following styles to the main.css file.\n/* Navigation */ nav ul { padding: 0; } nav li{ list-style:none; margin-top: 20px; } nav li a{ color: var(--body-text-color); display: flex; flex-direction: row; } nav li a.active { color: var(--main-text-colour); } nav li a.active .icon { opacity: 100%; } nav li a:hover { color: var(--main-text-colour); } nav li a:hover .icon { opacity: 100%; } .icon { height: 15px; width: 15px; background-size: cover; margin-right: 10px; opacity: 50%; } .home-icon { background-image: url(\u0026#34;../home.svg\u0026#34;); } .posts-icon { background-image: url(\u0026#34;../posts.svg\u0026#34;); } .tags-icon { background-image: url(\u0026#34;../tags.svg\u0026#34;); } External links and Footer Add your social media icons to the static folder. In this guide I will only be using Github and Patreon as I don\u0026rsquo;t have any social media accounts.\nin the themes hugo.toml file add the following parameter\ngithub = \u0026#39;https://github.com/Jono-Moss\u0026#39; patreon = \u0026#39;https://www.patreon.com/\u0026#39; This will be used to store the links of where the icons will goto.\nNow we need to add the following styles to the main.css file. /* External Links Icons */ #ex-icons { height: 25px; display: flex; flex-direction: row; margin-bottom: 5px; } #ex-icons a { margin-right: 5px; } #ex-icons img { height: 25px; width: auto; } footer { color: var(--body-text-color); } 16.The final header / sidebar will look like this Home / Posts Content We will now wrap the posts in a .card-wrapper class that we will use to style each post on the home.html page. Open the _default/home.html file and we will wrap all our content in a new div giving it the .card-wrapper class. The home.html file will look as follows: {{ define \u0026#34;main\u0026#34; }} {{ .Content }} {{ range site.RegularPages }} \u0026lt;div class=\u0026#34;card-wrapper\u0026#34;\u0026gt; \u0026lt;h3\u0026gt; \u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34;\u0026gt;{{ .LinkTitle }}\u0026lt;/a\u0026gt; \u0026lt;/h3\u0026gt; {{ .Summary }} \u0026lt;/div\u0026gt; {{ end }} {{ end }} Next we will take a look and edit the content of the home page. Open the content\\_index.md file. This is where your static content of your home page is stored. For this guide, we will remove all the text in the file and just add a \u0026ldquo;Home\u0026rdquo; header. Your file will look like this: +++ title = \u0026#39;Home\u0026#39; date = 2023-01-01T08:00:00-07:00 draft = false +++ # home When opening a post, the _default\\single.html file is responsible for the layout. I Will only wrap the post in a card-wrapper class div so that it will match the posts on the home screen. {{ define \u0026#34;main\u0026#34; }} \u0026lt;div class=\u0026#34;card-wrapper\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ $dateMachine := .Date | time.Format \u0026#34;2006-01-02T15:04:05-07:00\u0026#34; }} {{ $dateHuman := .Date | time.Format \u0026#34;:date_long\u0026#34; }} \u0026lt;time datetime=\u0026#34;{{ $dateMachine }}\u0026#34;\u0026gt;{{ $dateHuman }}\u0026lt;/time\u0026gt; {{ .Content }} {{ partial \u0026#34;terms.html\u0026#34; (dict \u0026#34;taxonomy\u0026#34; \u0026#34;tags\u0026#34; \u0026#34;page\u0026#34; .) }} \u0026lt;/div\u0026gt; {{ end }} A post will look like this: Tags and Category Sidebar I would like to create a new html file that will be the driver for our \u0026ldquo;Tags and Categories\u0026rdquo; side bar. Create a new aside.html file ine the partials folder.\nNow open open the _default/baseof.html file and add the following to include the new aside.html to it. The _default/baseof.html file will look as follows:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;{{ or site.Language.LanguageCode site.Language.Lang }}\u0026#34; dir=\u0026#34;{{ or site.Language.LanguageDirection `ltr` }}\u0026#34;\u0026gt; \u0026lt;head\u0026gt; {{ partial \u0026#34;head.html\u0026#34; . }} \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;header\u0026gt; {{ partial \u0026#34;header.html\u0026#34; . }} \u0026lt;footer\u0026gt; {{ partial \u0026#34;footer.html\u0026#34; . }} \u0026lt;/footer\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;main\u0026gt; {{ block \u0026#34;main\u0026#34; . }}{{ end }} \u0026lt;/main\u0026gt; \u0026lt;aside\u0026gt; {{ partial \u0026#34;aside.html\u0026#34; . }} \u0026lt;/aside\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; We will now edit the aside.html file to display the categories and the Tags: \u0026lt;h3\u0026gt;Tags\u0026lt;/h3\u0026gt; \u0026lt;ul id=\u0026#34;all-tags\u0026#34;\u0026gt; {{ range $name, $taxonomy := .Site.Taxonomies.tags }} \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/tags/{{ $name | urlize }}\u0026#34;\u0026gt;{{ $name }}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; {{ end }} \u0026lt;/ul\u0026gt; And css /* Aside bar */ #all-tags { padding: 0; } #all-tags li{ list-style:none; margin-top: 20px; } #all-tags li a{ color: var(--body-text-color); display: flex; flex-direction: row; } A side bar will look like this: In order to add the \u0026ldquo;Categories\u0026rdquo; and a \u0026ldquo;Search\u0026rdquo; function a lot more things need to be added to the template in order to get it to work. So for now I am happy with my quick look at how the layout of a Hugo theme works.\nSet Syntax Highlighting Theme To set the colour scheme of the syntax highlighting that hugo and go will use. Add the following to your hugo.toml file. Ps I like the \u0026ldquo;Autumn\u0026rdquo; colour scheme, you can see all available themes at: https://xyproto.github.io/splash/docs/ [markup] [markup.goldmark] unsafe = true [markup.tableOfContents] endLevel = 4 ordered = true startLevel = 2 [markup.highlight] anchorLineNos = false codeFences = true guessSyntax = false hl_Lines = \u0026#39;\u0026#39; hl_inline = false lineAnchors = \u0026#39;\u0026#39; lineNoStart = 1 lineNos = false lineNumbersInTable = true noClasses = true noHl = false style = \u0026#39;autumn\u0026#39; tabWidth = 4 If you would like to use your own css styles, change the noClasses = true to noClasses = false. Then use the following command:\nhugo gen chromastyles --style=monokai \u0026gt; syntax.css To generate the css file you will need to start creating your own style.\nsee the following link for more information. https://gohugo.io/content-management/syntax-highlighting/#generate-syntax-highlighter-css\nSecurity Lastly and before I forget, I want to create an .htaccess file to restrict access to subfolder on the site when it is live.\ncreate an .htaccess file in the static folder and add the following to it:\nDirectoryIndex index.html RewriteEngine On # disable directory browsing Options All -Indexes #force https RewriteEngine On RewriteCond %{HTTPS} off RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301] ","date":"2023-12-04T00:00:00Z","image":"http://localhost:1313/post/hugo-theme-layout-04-12-2023/splash_hu1230729156997370752.jpg","permalink":"http://localhost:1313/post/hugo-theme-layout-04-12-2023/","title":"Learning Hugo - Layouts"}]